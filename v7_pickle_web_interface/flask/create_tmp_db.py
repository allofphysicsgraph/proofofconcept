#/usr/bin/env python

# 20200315: switch ASTs from nested dictionaries to nested lists

# 20200126: changed from list of dicts to dict of dicts
# originally each of the top-level dicts (e.g., symbols, units, derivations, expressions) were lists of dictionaries.
# the "list of dictionaries" design is easily transformed to a table (where the column is the key)
# Example:
#    dat['symbols'] = [
#           {'latex': 'a',            'unique id': '9139', 'category': 'variable', 'scope': ['real', 'complex']},
#           {'latex': 'b',            'unique id': '1939', 'category': 'variable', 'scope': ['real', 'complex']}]
# Then I observed that looping over the list of dicts to find the relevant dictionary in the list
# was inefficient since each list necessarily has a unique key; therefore it is faster to have a dictionary with the unique ID serving as key
# Example:
#    dat['symbols'] = {
#           '9139': {'latex': 'a',             'category': 'variable', 'scope': ['real', 'complex']},
#           '1939': {'latex': 'b',             'category': 'variable', 'scope': ['real', 'complex']}}

# 20200124: added symbols, operators, units, and measures
# previously I had three keys: expressions, inference rules, derivations.
# Enabling validation of steps requires supporting a computer algebra system (CAS)
# To enable an arbitrary choice of CAS, I need to support abstract syntax trees (ASTs)
# To enable an AST, I need to define symbols and operators
# To enable symbols, I need units and measures

# 20200124: changed from three dictionaries (for expressions, inference rules, derivations) to a single dictionary ("dat") with three keys
# While passing around three separate dictionaries works, adding new top-level structures (like symbols, units, etc) does not scale well.
# To enable an arbitrary number of top-level data structures, I switched to a single dictionary ("dat") with multiple keys.

converted from pkl to json

#import pickle
import json
import logging
logger = logging.getLogger(__name__)

dat = {} # one data structure to hold all others (expressions, inference rules, derivations, symbols, units, measures, operators)

# the most visible component of the Physics Derivation Graph is the expression
#   * steps are composed of inference rules and expressions; derivations are comprised of steps
#   * expressions are composed of operators and symbols
# Each expression has a unique numeric identifier
# An expression manifests as LaTeX and an Abstract Syntax Tree
# The AST and LaTeX representations are intended to be equivalent
# Ambiguous LaTeX is not allowed
dat['expressions'] = {
  '1492842000':    {'latex': '\\nabla \\vec{x} = f(y)','AST': ['equals', [
                                                                ['nabla', ['2911']],
                                                                ['function', ['1452']]]]},
  '4928923942': {'latex': 'a = b',         'AST': ['equals', ['9139', '1939']]},
  '9499959299': {'latex': 'a + k = b + k', 'AST': ['equals', [
                                                                ['addition', [
                                                                    '9139', '5321']],
                                                                ['addition', [
                                                                    '1939', '5321']]]]},
  '9584821911': {'latex': 'c + d = a',     'AST': ['equals', [
                                                                ['addition', [
                                                                    '4231', '1900']],
                                                                '9139']]},
  '1492811142': {'latex': 'f = x - d',     'AST': ['equals', [
                                                                '4200',
                                                                ['subtraction', [
                                                                     '1464', '1900']]]]},
  '9494829190': {'latex': 'k',             'AST': ['5321']},
# imported feeds from v3
  '0005938585': {'latex': '\\frac{-\\hbar^2}{2m}'},
  '0005395034': {'latex': 'a_{\\alpha} \\braket{\\psi_{\\alpha}}{\\psi_{\\beta}}'},
  '0005749291': {'latex': 'f'},
  '0008837284': {'latex': 'T'},
  '0002424922': {'latex': 'a'},
  '0006644853': {'latex': 'c/a'},
  '0004307451': {'latex': '(b/(2a))^2'},
  '0004858592': {'latex': 'h'},
  '0002367209': {'latex': '1/2'},
  '0002838490': {'latex': 'b/(2a)'},
  '0002449291': {'latex': 'b/(2a)'},
  '0007636749': {'latex': 'x'},
  '0007563791': {'latex': 'i'},
  '0009877781': {'latex': 'y'},
  '0003954314': {'latex': 'dx'},
  '0004264724': {'latex': 'y'},
  '0006563727': {'latex': 'x'},
  '0006656532': {'latex': 'e'},
  '0004582412': {'latex': 'x'},
  '0004089571': {'latex': '2x'},
  '0007894942': {'latex': '(\\sin(x))^2'},
  '0001111111': {'latex': '(\\sin(x))^2'},
  '0006466214': {'latex': '(\\sin(x))^2'},
  '0007471778': {'latex': '2(\\sin(x))^2'},
  '0008842811': {'latex': '\\cos(2x)'},
  '0003838111': {'latex': '2'},
  '0001334112': {'latex': 'W'},
  '0009587738': {'latex': '\\psi'},
  '0009458842': {'latex': '\\psi(x)'},
  '0004934845': {'latex': 'x'},
  '0009484724': {'latex': '\\frac{n \\pi}{W}x'},
  '0000040490': {'latex': 'a^2'},
  '0004831494': {'latex': 'a'},
  '0009485858': {'latex': '\\frac{2n\\pi}{W}'},
  '0004948585': {'latex': 'a'},
  '0002929944': {'latex': '1/2'},
  '0009485857': {'latex': 'a^2\\frac{2}{W}'},
  '0009594995': {'latex': '1/2'},
  '0005626421': {'latex': 't'},
  '0003232242': {'latex': 't'},
  '0002393922': {'latex': 'x'},
  '0003949052': {'latex': '-x'},
  '0003413423': {'latex': '\\cos(-x)'},
  '0004849392': {'latex': 'x'},
  '0001030901': {'latex': '\\cos(x)'},
  '0002919191': {'latex': '\\sin(-x)'},
  '0003919391': {'latex': 'x'},
  '0003981813': {'latex': '-\\sin(x)'},
  '0004829194': {'latex': '2'},
  '0003747849': {'latex': '-1'},
  '0001921933': {'latex': '2 i'},
  '0009492929': {'latex': 'v\\ du'},
  '0002940021': {'latex': '2 \\pi'},
  '0003949921': {'latex': '\\hbar'},
  '0001209482': {'latex': '2 \\pi'},
  '0001304952': {'latex': '\\hbar'},
  '0002239424': {'latex': '2'},
  '0002342425': {'latex': 'm/m'},
  '0006544644': {'latex': 't'},
  '0002436656': {'latex': 'i \\hbar'},
  '0000999900': {'latex': 'b/(2a)'},
  '0002338514': {'latex': '\\vec{p}_{2}'},
# imported expressions from v3
  '3121513111': {'latex': 'k=\\frac{2 \\pi}{\\lambda}'},
  '5900595848': {'latex': 'k=\\frac{\\omega}{v}'},
  '1293923844': {'latex': '\\lambda = v\\: T'},
  '0404050504': {'latex': '\\lambda = \\frac{v}{f}'},
  '0934990943': {'latex': 'k = \\frac{2 \\pi}{v\\ T}'},
  '3131211131': {'latex': '\\omega=2 \\pi f'},
  '3131111133': {'latex': 'T=1/f'},
  '2131616531': {'latex': 'T\\ f=1'},
  '2113211456': {'latex': 'f=1/T'},
  '3132131132': {'latex': '\\omega=\\frac{2\\pi}{T}'},
  '2569154141': {'latex': '\\vec{\\nabla} \\times \\frac{\\partial}{\\partial t}\\vec{H} = \\epsilon_0 \\frac{\\partial^2 }{\\partial t^2}\\vec{E}'},
  '1314864131': {'latex': '\\vec{\\nabla} \\times \\vec{H} = \\epsilon_0 \\frac{\\partial }{\\partial t}\\vec{E}'},
  '9492920340': {'latex': 'y = \\cos(x)+i \\sin(x)'},
  '9429829482': {'latex': '\\frac{d}{dx} y= -\\sin(x) + i\\cos(x)'},
  '9482984922': {'latex': '\\frac{d}{dx} y= (i\\sin(x) + \\cos(x))\\ i'},
  '9848294829': {'latex': '\\frac{d}{dx} y= y\\ i'},
  '9848292229': {'latex': 'dy = y\\ i\\ dx'},
  '9482113948': {'latex': '\\frac{dy}{y} = i\\ dx'},
  '9482943948': {'latex': '\\log(y) = i\\ dx'},
  '4928239482': {'latex': '\\log(y) = i\\ x'},
  '4923339482': {'latex': 'i\\ x = \\log(y)'},
  '9482923849': {'latex': '\\exp(i\\ x) = y'},
  '4938429483': {'latex': '\\exp(i\\ x) = \\cos(x)+i \\sin(x)'},
  '4838429483': {'latex': '\\exp(2i\\ x) = \\cos(2x)+i \\sin(2x)'},
  '4638429483': {'latex': '\\exp(2i\\ x) = (\\cos(x)+i \\sin(x))(\\cos(x)+i \\sin(x))'},
  '4598294821': {'latex': '\\exp(2i\\ x) = (\\cos(x))^2+2i\\cos(x)\\sin(x)-(\\sin(x))^2'},
  '9483928192': {'latex': '\\cos(2x)+i\\sin(2x) = (\\cos(x))^2+2i\\cos(x)\\sin(x)-(\\sin(x))^2'},
  '4858429483': {'latex': '\\exp(i\\ x)\\exp(i\\ x) = (\\cos(x)+i \\sin(x))(\\cos(x)+i \\sin(x))'},
  '4954839242': {'latex': '\\cos(2x)+i\\sin(2x) = (\\cos(x)+i \\sin(x))(\\cos(x)+i \\sin(x))'},
  '9482928242': {'latex': '\\cos(2x)=(\\cos(x))^2 - (\\sin(x))^2'},
  '9482928243': {'latex': '\\cos(2x)+(\\sin(x))^2=(\\cos(x))^2'},
  '9482438243': {'latex': '(\\cos(x))^2=\\cos(2x)+(\\sin(x))^2'},
  '5832984291': {'latex': '(\\sin(x))^2 + (\\cos(x))^2=1'},
  '3285732911': {'latex': '(\\cos(x))^2 = 1-(\\sin(x))^2'},
  '4827492911': {'latex': '\\cos(2x)+(\\sin(x))^2 = 1-(\\sin(x))^2'},
  '1248277773': {'latex': '\\cos(2x) = 1-2(\\sin(x))^2'},
  '7572664728': {'latex': '\\cos(2x)+2(\\sin(x))^2 = 1'},
  '9889984281': {'latex': '2(\\sin(x))^2 = 1-\\cos(2x)'},
  '9988949211': {'latex': '(\\sin(x))^2 = \\frac{1-\\cos(2x)}{2}'},
  '4978429483': {'latex': '\\exp(-i\\ x) = \\cos(-x)+i \\sin(-x)'},
  '4929218492': {'latex': 'a+b = c'},
  '4929482992': {'latex': 'b = 2'},
  '4984892984': {'latex': 'a+2 = c'},
  '2948293829': {'latex': 'a = b'},
  '9482948292': {'latex': 'b = c'},
  '4828238421': {'latex': 'a = c'},
  '9829420421': {'latex': 'b = a'},
  '9999999965': {'latex': 'E = \\omega \\hbar'},
  '9999999964': {'latex': '\\omega = c k'},
  '9999999963': {'latex': '\\lambda = h/p'},
  '9999999962': {'latex': 'p = \\hbar k'},
  '9999999960': {'latex': '\\hbar= h/(2 \\pi)'},
  '9999999957': {'latex': '\\vec{F} = -\\vec{\\nabla} V'},
  '9999999956': {'latex': '\\vec{F} = \\frac{\\partial}{\\partial t}\\vec{p}'},
  '9999999955': {'latex': '\\vec{E} = -\\vec{\\nabla} \\Psi'},
  '9999999954': {'latex': 'c = 1/\\sqrt{\\epsilon_0 \\mu_0}'},
  '9999999953': {'latex': '\\int_{-\\infty}^{\\infty} \\delta(x)\\ dx = 1'},
  '9999999952': {'latex': 'f(x) \\delta(x-a) = f(a)'},
  '9999999951': {'latex': '\\langle x | k \\rangle = \\frac{\\exp(ikx)}{\\sqrt{2\\pi}}'},
  '9999999950': {'latex': '\\beta = 1/(k_{Boltzmann}T)'},
  '9999999999': {'latex': 'Newton = kilogram*meter/(second^2)'},
  '9999999998': {'latex': 'Joule = Newton*meter'},
  '9999999997': {'latex': 'Watt=Joule/second'},
  '9999999996': {'latex': 'Coulomb=Ampere/second'},
  '9999999995': {'latex': 'Volt=Joule/Coulumb'},
  '9999999993': {'latex': 'Farad = Coulumb/Volt'},
  '9999999992': {'latex': 'Tesla= Newton/(Ampere*meter)'},
  '9999999991': {'latex': 'Pascal = Newton/(meter^2)'},
  '9999999990': {'latex': 'Tesla = 10000*Gauss'},
  '9999999989': {'latex': 'mass_{electron} = 511000 electronVolts/(q^2)'},
  '9999999988': {'latex': '1 atmosphere = 14.7 pounds/(inch^2)'},
  '9999999987': {'latex': '1 atmosphere = 101.325 Pascal'},
  '9999999986': {'latex': '\\left[\\begin{array}{cc}\\cos\\theta &amp; \\sin\\theta\\\\-\\sin\\theta &amp; \\cos\\theta\\end{array}\\right]\\left[\\begin{array}{c}A_x \\\\ A_y \\end{array}\\right]=\\left[\\begin{array}{c}A_{x\'} \\\\ A_{y\'} \\end{array}\\right]'},
  '9999999985': {'latex': 'V=I R'},
  '9999999984': {'latex': 'Q=C V'},
  '9999999983': {'latex': 'C = V A/d'},
  '9999999982': {'latex': 'V=I R + Q/C + L \\frac{\\partial I}{\\partial t}'},
  '9999999981': {'latex': '\\vec{\\nabla} \\cdot \\vec{E} = \\rho/\\epsilon_0'},
  '9919999981': {'latex': '\\rho=0'},
  '9999999980': {'latex': '\\vec{\\nabla} \\cdot \\vec{B} = 0'},
  '9999999979': {'latex': '\\vec{\\nabla} \\times \\vec{E} = -\\frac{\\partial \\vec{B}}{\\partial t}'},
  '9991999979': {'latex': '\\vec{\\nabla} \\times \\vec{E} = -\\mu_0\\frac{\\partial \\vec{H}}{\\partial t}'},
  '9999999978': {'latex': '\\vec{\\nabla} \\times \\vec{B} = \\mu_0 \\vec{J} + \\mu_0 \\epsilon_0 \\frac{\\partial E}{\\partial t}'},
  '9999999977': {'latex': '[\\hat{x},\\hat{p}] = i \\hbar'},
  '9999999976': {'latex': '\\hat{p} = -i \\hbar \\frac{\\partial }{\\partial x}'},
  '9999999974': {'latex': '\\bra{\\psi} \\hat{A} \\ket{\\psi} = \\int_{-\\infty}^{\\infty} \\psi^* A \\psi\\ dx'},
  '9999999973': {'latex': '\\left( \\Delta A \\right)^2  = \\langle A^2 \\rangle - \\langle A \\rangle^2'},
  '9999999972': {'latex': '{\\cal H} \\ket{\\psi} = E \\ket{\\psi}'},
  '9999999971': {'latex': '{\\cal H} = \\frac{p^2}{2m}+V'},
  '9999999970': {'latex': '\\eta_1 \\sin\\theta_1 = \\eta_2 \\sin\\theta_2'},
  '9999999967': {'latex': '\\vec{S} = \\frac{1}{\\mu_0} \\vec{E}\\times \\vec{B}'},
  '9999999966': {'latex': '\\vec{L} = \\vec{r}\\times\\vec{p}'},
  '9999999969': {'latex': 'x=\\frac{-b+\\sqrt{b^2-4ac}}{2a}'},
  '9999999968': {'latex': 'x=\\frac{-b-\\sqrt{b^2-4ac}}{2a}'},
  '8582954722': {'latex': 'x^2 + 2xh + h^2 = (x+h)^2'},
  '9285928292': {'latex': 'ax^2 + bx + c = 0'},
  '5958392859': {'latex': 'x^2 + (b/a)x+(c/a) =0'},
  '5938459282': {'latex': 'x^2 + (b/a)x = -c/a'},
  '5928292841': {'latex': 'x^2 + (b/a)x + (b/(2a))^2 = -c/a + (b/(2a))^2'},
  '5928285821': {'latex': 'x^2 + 2x(b/(2a)) + (b/(2a))^2 = (x+(b/(2a)))^2'},
  '5959282914': {'latex': 'x^2 + x(b/a) + (b/(2a))^2 = (x+(b/(2a)))^2'},
  '9385938295': {'latex': '(x+(b/(2a)))^2 = -(c/a) + (b/(2a))^2'},
  '9582958294': {'latex': 'x+(b/(2a)) =  \\sqrt{(b/(2a))^2 - (c/a)}'},
  '5982958249': {'latex': 'x+(b/(2a)) = -\\sqrt{(b/(2a))^2 - (c/a)}'},
  '9582958293': {'latex': 'x =  \\sqrt{(b/(2a))^2 - (c/a)}-(b/(2a))'},
  '5982958248': {'latex': 'x = -\\sqrt{(b/(2a))^2 - (c/a)}-(b/(2a))'},
  '5727578862': {'latex': '\\frac{d^2}{dx^2} \\psi(x) = -k^2 \\psi(x)'},
  '8582885111': {'latex': '\\psi(x) = a \\sin(kx) + b \\cos(kx)'},
  '9585727710': {'latex': '\\psi(x)=0\\when{x=0}'},
  '9495857278': {'latex': '\\psi(x)=0\\when{x=W}'},
  '8577275751': {'latex': '0=a \\sin(0) + b\\cos(0)'},
  '1293913110': {'latex': '0=b'},
  '9059289981': {'latex': '\\psi(x)=a \\sin(k x)'},
  '1020010291': {'latex': '0=a \\sin(k W)'},
  '1857710291': {'latex': '0=a \\sin(n \\pi) \\when{n \\in {\\rm Integer}}'},
  '1010923823': {'latex': 'k W = n \\pi \\when{n \\in {\\rm Integer}}'},
  '1858772113': {'latex': 'k = \\frac{n \\pi}{W} \\when{n \\in {\\rm Integer}}'},
  '2944838499': {'latex': '\\psi(x)=a \\sin(\\frac{n \\pi}{W} x) \\when{n \\in {\\rm Integer}}'},
  '8849289982': {'latex': '\\psi(x)^*=a \\sin(\\frac{n \\pi}{W} x) \\when{n \\in {\\rm Integer}}'},
  '1934748140': {'latex': '\\int |\\psi(x)|^2\\ dx = 1'},
  '8572657110': {'latex': '1= \\int |\\psi(x)|^2\\ dx'},
  '4857472413': {'latex': '1= \\int \\psi(x)\\psi(x)^*\\ dx'},
  '0203024440': {'latex': '1= \\int_0^W a \\sin(\\frac{n \\pi}{W} x) \\psi(x)^*\\ dx\\when{n \\in {\\rm Integer}}'},
  '8889444440': {'latex': '1= \\int_0^W a^2 \\left(\\sin\\left(\\frac{n \\pi}{W} x\\right)\\right)^2\\ dx\\when{n \\in {\\rm Integer}}'},
  '7575738420': {'latex': '\\left(\\sin\\left(\\frac{n \\pi}{W}x\\right)\\right)^2 = \\frac{1-\\cos\\left(2\\frac{n \\pi}{W}x\\right)}{2}'},
  '8576785890': {'latex': '1= \\int_0^W a^2 \\frac{1-\\cos\\left(2\\frac{n \\pi}{W}x\\right)}{2}\\ dx\\when{n \\in {\\rm Integer}}'},
  '9858028950': {'latex': '\\frac{1}{a^2}= \\int_0^W \\frac{1-\\cos\\left(2\\frac{n \\pi}{W}x\\right)}{2}\\ dx\\when{n \\in {\\rm Integer}}'},
  '1202310110': {'latex': '\\frac{1}{a^2}= \\int_0^W \\frac{1}{2}\\ dx - \\frac{1}{2} \\int_0^W \\cos\\left(2\\frac{n \\pi}{W}x\\right)\\ dx\\when{n \\in {\\rm Integer}}'},
  '0948572140': {'latex': '\\int \\cos(a x)\\ dx = \\frac{1}{a}\\sin(a x)'},
  '7564894985': {'latex': '\\int \\cos\\left(\\frac{2n\\pi}{W} x\\right)\\ dx = \\frac{W}{2n\\pi}\\sin\\left(\\frac{2n\\pi}{W} x\\right)'},
  '5857434758': {'latex': '\\int a\\ dx = a x'},
  '8575746378': {'latex': '\\int \\frac{1}{2}\\ dx = \\frac{1}{2} x'},
  '1202312210': {'latex': '\\frac{1}{a^2}= \\frac{1}{2}W - \\frac{1}{2} \\int_0^W \\cos\\left(2\\frac{n \\pi}{W}x\\right)\\ dx\\when{n \\in {\\rm Integer}}'},
  '0439492440': {'latex': '\\frac{1}{a^2}= \\frac{1}{2}W - \\frac{1}{2}\\left. \\frac{W}{2n\\pi}\\sin\\left(\\frac{2n\\pi}{W} x\\right)\\right|_0^W    when{n \\in {\\rm Integer}}'},
  '4857475848': {'latex': '\\frac{1}{a^2}= \\frac{W}{2}'},
  '8485867742': {'latex': '\\frac{2}{W}= a^2'},
  '9485747245': {'latex': '\\sqrt{\\frac{2}{W}}= a'},
  '9485747246': {'latex': '-\\sqrt{\\frac{2}{W}}= a'},
  '9393939992': {'latex': '\\psi(x)=\\sqrt{\\frac{2}{W}} \\sin\\left(\\frac{n \\pi}{W} x\\right) \\when{n \\in {\\rm Integer}}'},
  '9393939991': {'latex': '\\psi(x)=-\\sqrt{\\frac{2}{W}} \\sin\\left(\\frac{n \\pi}{W} x\\right) \\when{n \\in {\\rm Integer}}'},
  '8575748999': {'latex': '\\frac{d^2}{dx^2} \\left(a \\sin(k x) + b \\cos(k x)\\right) = -k^2 \\left(a \\sin(kx) + b \\cos(kx)\\right)'},
  '8485757728': {'latex': 'a \\frac{d^2}{dx^2}\\sin(kx) + b \\frac{d^2}{dx^2}\\cos(k x) = -a k^2 \\sin(kx) + -b k^2 \\cos(kx)'},
  '8484544728': {'latex': '-a k^2\\sin(k x) + -b k^2\\cos(k x) = -a k^2 \\sin(kx) + -b k^2 \\cos(k x)'},
  '1314464131': {'latex': '\\vec{\\nabla} \\times \\frac{\\partial \\vec{H}}{\\partial t} = \\epsilon_0 \\frac{\\partial^2 \\vec{E}}{\\partial t^2}'},
  '9291999979': {'latex': '\\vec{\\nabla} \\times \\vec{\\nabla} \\times \\vec{E} = -\\mu_0\\vec{\\nabla} \\times \\frac{\\partial \\vec{H}}{\\partial t}'},
  '3947269979': {'latex': '\\vec{\\nabla} \\times \\vec{\\nabla} \\times \\vec{E} = -\\mu_0 \\epsilon_0 \\frac{\\partial^2 \\vec{E}}{\\partial t^2}'},
  '7466829492': {'latex': '\\vec{\\nabla} \\cdot \\vec{E} = 0'},
  '7575859295': {'latex': '\\vec{\\nabla} \\times \\vec{\\nabla} \\times \\vec{E} = \\vec{\\nabla}(\\vec{\\nabla} \\cdot \\vec{E} - \\nabla^2 \\vec{E})'},
  '1636453295': {'latex': '\\vec{\\nabla} \\times \\vec{\\nabla} \\times \\vec{E} =  - \\nabla^2 \\vec{E}'},
  '8494839423': {'latex': '\\nabla^2 \\vec{E}= \\mu_0 \\epsilon_0 \\frac{\\partial^2 \\vec{E}}{\\partial t^2}'},
  '8572852424': {'latex': '\\vec{E}= E(\\vec{r},t)'},
  '9499428242': {'latex': 'E(\\vec{r},t)=E(\\vec{r})\\exp(i \\omega t)'},
  '9394939493': {'latex': '\\nabla^2 E(\\vec{r},t)= \\mu_0 \\epsilon_0 \\frac{\\partial^2}{\\partial t^2} E(\\vec{r},t)'},
  '2029293929': {'latex': '\\nabla^2 E(\\vec{r})\\exp(i \\omega t)= \\mu_0 \\epsilon_0 \\frac{\\partial^2}{\\partial t^2} E(\\vec{r})\\exp(i \\omega t)'},
  '4985825552': {'latex': '\\nabla^2 E(\\vec{r})\\exp(i \\omega t)= i \\omega \\mu_0 \\epsilon_0 \\frac{\\partial}{\\partial t} E(\\vec{r})\\exp(i \\omega t)'},
  '1858578388': {'latex': '\\nabla^2 E(\\vec{r})\\exp(i \\omega t)= - \\omega^2 \\mu_0 \\epsilon_0 E(\\vec{r})\\exp(i \\omega t)'},
  '4585828572': {'latex': '\\epsilon_0 \\mu_0 = \\frac{1}{c^2}'},
  '9485384858': {'latex': '\\nabla^2 E(\\vec{r})\\exp(i \\omega t)= - \\frac{\\omega^2}{c^2} E(\\vec{r})\\exp(i \\omega t)'},
  '3485475729': {'latex': '\\nabla^2 E(\\vec{r})= - \\frac{\\omega^2}{c^2} E(\\vec{r})'},
  '2394853829': {'latex': '\\exp(-i\\ x) = \\cos(-x)+i \\sin(-x)'},
  '4938429482': {'latex': '\\exp(-i\\ x) = \\cos(x)+i \\sin(-x)'},
  '4938429484': {'latex': '\\exp(-i\\ x) = \\cos(x)-i \\sin(x)'},
  '4742644828': {'latex': '\\exp(i\\ x)+\\exp(-i\\ x) = 2\\cos(x)'},
  '3829492824': {'latex': '\\frac{1}{2}\\left(\\exp(i\\ x)+\\exp(-i\\ x)\\right) = \\cos(x)'},
  '4585932229': {'latex': '\\cos(x) = \\frac{1}{2}\\left(\\exp(i\\ x)+\\exp(-i\\ x)\\right)'},
  '2123139121': {'latex': '-\\exp(-i\\ x) = -\\cos(x)+i \\sin(x)'},
  '3942849294': {'latex': '\\exp(i\\ x)-\\exp(-i\\ x) = 2i \\sin(x)'},
  '4843995999': {'latex': '\\frac{1}{2i}\\left(\\exp(i\\ x)-\\exp(-i\\ x)\\right) = \\sin(x)'},
  '2103023049': {'latex': '\\sin(x) = \\frac{1}{2i}\\left(\\exp(i\\ x)-\\exp(-i\\ x)\\right)'},
  '8489593958': {'latex': 'd(u\\ v) = u\\ dv + v\\ du'},
  '8489593960': {'latex': 'd(u\\ v) - v\\ du= u\\ dv'},
  '8489593962': {'latex': 'u\\ dv = d(u\\ v) - v\\ du'},
  '8489593964': {'latex': '\\int u\\ dv = u\\ v - \\int v\\ du'},
  '7575859300': {'latex': '\\epsilon^{i,j,k} \\hat{x}_i \\nabla_j ( \\vec{\\nabla} \\times \\vec{E} )_k = \\vec{\\nabla}(\\vec{\\nabla} \\cdot \\vec{E} - \\nabla^2 \\vec{E})'},
  '7575859302': {'latex': '\\epsilon^{i,j,k} \\epsilon_{n,j,k} \\hat{x}_i \\nabla_j \\nabla^m E^n = \\vec{\\nabla}(\\vec{\\nabla} \\cdot \\vec{E} - \\nabla^2 \\vec{E})'},
  '7575859304': {'latex': '\\epsilon^{i,j,k} \\epsilon_{n,j,k} = \\rowContravariantColumnCovariant{\\delta}{l}{j} \\rowContravariantColumnCovariant{\\delta}{m}{k} - \\rowContravariantColumnCovariant{\\delta}{l}{k} \\rowContravariantColumnCovariant{\\delta}{m}{h}'},
  '7575859306': {'latex': '\\left( \\rowContravariantColumnCovariant{\\delta}{l}{j} \\rowContravariantColumnCovariant{\\delta}{m}{k} - \\rowContravariantColumnCovariant{\\delta}{l}{k} \\rowContravariantColumnCovariant{\\delta}{m}{h} \\right) \\hat{x}_i \\nabla_j \\nabla^m E^n = \\vec{\\nabla}(\\vec{\\nabla} \\cdot \\vec{E} - \\nabla^2 \\vec{E})'},
  '7575859308': {'latex': '\\left( \\rowContravariantColumnCovariant{\\delta}{l}{j} \\rowContravariantColumnCovariant{\\delta}{m}{k} \\hat{x}_i \\nabla_j \\nabla^m E^n\\right)-\\left( \\rowContravariantColumnCovariant{\\delta}{l}{k} \\rowContravariantColumnCovariant{\\delta}{m}{h} \\hat{x}_i \\nabla_j \\nabla^m E^n \\right)  = \\vec{\\nabla}(\\vec{\\nabla} \\cdot \\vec{E} - \\nabla^2 \\vec{E})'},
  '7575859310': {'latex': '\\hat{x}_m \\nabla_n \\nabla^m E^n - \\hat{x}_n \\nabla_m \\nabla^m E^n = \\vec{\\nabla}(\\vec{\\nabla} \\cdot \\vec{E} - \\nabla^2 \\vec{E})'},
  '7575859312': {'latex': '\\vec{\\nabla}(\\vec{\\nabla} \\cdot \\vec{E} - \\nabla^2 \\vec{E} = \\vec{\\nabla}(\\vec{\\nabla} \\cdot \\vec{E} - \\nabla^2 \\vec{E})'},
  '1020394900': {'latex': 'p = h/\\lambda'},
  '1020394902': {'latex': 'E = h f'},
  '3147472131': {'latex': '\\frac{\\omega}{2 \\pi}= f'},
  '4147472132': {'latex': 'E = \\frac{h \\omega}{2 \\pi}'},
  '1029039903': {'latex': 'p = m v'},
  '9999999961': {'latex': '\\frac{E}{\\hbar} = \\omega'},
  '3121234211': {'latex': '\\frac{k}{2\\pi}=\\lambda'},
  '3121234212': {'latex': 'p = \\frac{h k}{2\\pi}'},
  '9999999870': {'latex': '\\frac{p}{\\hbar} = k'},
  '9999998870': {'latex': '\\frac{\\vec{p}}{\\hbar} = \\vec{k}'},
  '3948574224': {'latex': '\\psi(\\vec{r},t) = \\psi_0 \\exp\\left(i\\left(\\vec{k}\\cdot\\vec{r} - \\omega t \\right) \\right)'},
  '3948574226': {'latex': '\\psi(\\vec{r},t) = \\psi_0 \\exp\\left(i\\left(\\frac{\\vec{p}\\cdot\\vec{r}}{\\hbar} - \\omega t \\right) \\right)'},
  '3948574228': {'latex': '\\psi(\\vec{r},t) = \\psi_0 \\exp\\left(i\\left(\\frac{\\vec{p}\\cdot\\vec{r}}{\\hbar} - \\frac{E t}{\\hbar}  \\right) \\right)'},
  '3948574230': {'latex': '\\psi(\\vec{r},t) = \\psi_0 \\exp\\left(\\frac{i}{\\hbar}\\left(\\vec{p}\\cdot\\vec{r} - E t \\right) \\right)'},
  '4298359835': {'latex': 'E = \\frac{1}{2}m v^2'},
  '4298359845': {'latex': 'E = \\frac{1}{2m}m^2 v^2'},
  '4298359851': {'latex': 'E = \\frac{p^2}{2m}'},
  '1029039904': {'latex': 'p^2 = m^2 v^2'},
  '3948574233': {'latex': '\\frac{\\partial}{\\partial t}\\psi(\\vec{r},t) = \\psi_0 \\frac{\\partial}{\\partial t}\\exp\\left(i\\left(\\frac{\\vec{p}\\cdot\\vec{r}}{\\hbar} - \\frac{E t}{\\hbar}  \\right) \\right)'},
  '3948574235': {'latex': '\\frac{\\partial}{\\partial t}\\psi(\\vec{r},t) = \\frac{-i}{\\hbar}E \\psi_0 \\exp\\left(i\\left(\\frac{\\vec{p}\\cdot\\vec{r}}{\\hbar} - \\frac{E t}{\\hbar}  \\right) \\right)'},
  '3948571256': {'latex': '\\frac{\\partial}{\\partial t}\\psi(\\vec{r},t) = \\frac{-i}{\\hbar}E \\psi(\\vec{r},t)'},
  '4348571256': {'latex': '\\frac{\\partial}{\\partial t}\\psi(\\vec{r},t) = \\frac{-i}{\\hbar}\\frac{p^2}{2 m} \\psi(\\vec{r},t)'},
  '4341171256': {'latex': 'i \\hbar \\frac{\\partial}{\\partial t}\\psi(\\vec{r},t) = \\frac{p^2}{2 m} \\psi(\\vec{r},t)'},
  '3948572230': {'latex': '\\vec{\\nabla}\\psi(\\vec{r},t) = \\psi_0 \\vec{\\nabla}\\exp\\left(\\frac{i}{\\hbar}\\left(\\vec{p}\\cdot\\vec{r} - E t \\right) \\right)'},
  '4943571230': {'latex': '\\vec{\\nabla}\\psi(\\vec{r},t) = \\frac{i}{\\hbar} \\vec{p} \\psi_0 \\exp\\left(\\frac{i}{\\hbar}\\left(\\vec{p}\\cdot\\vec{r} - E t \\right) \\right)'},
  '5985371230': {'latex': '\\vec{\\nabla}\\psi(\\vec{r},t) = \\frac{i}{\\hbar} \\vec{p} \\psi(\\vec{r},t)'},
  '4394958389': {'latex': '\\vec{\\nabla}\\cdot \\left(\\vec{\\nabla}\\psi(\\vec{r},t)\\right) = \\frac{i}{\\hbar} \\vec{\\nabla}\\cdot\\left( \\vec{p} \\psi(\\vec{r},t)\\right)'},
  '1648958381': {'latex': '\\nabla^2 \\psi\\left(\\vec{r},t)\\right) = \\frac{i}{\\hbar} \\vec{p} \\cdot \\left( \\vec{\\nabla}\\psi(\\vec{r},t)\\right)'},
  '2648958382': {'latex': '\\nabla^2 \\psi\\left(\\vec{r},t)\\right) = \\frac{i}{\\hbar} \\vec{p} \\cdot \\left( \\frac{i}{\\hbar} \\vec{p}\\psi(\\vec{r},t)\\right)'},
  '2395958385': {'latex': '\\nabla^2 \\psi\\left(\\vec{r},t)\\right) = \\frac{-p^2}{\\hbar} \\psi(\\vec{r},t)'},
  '5868688585': {'latex': '\\frac{-\\hbar^2}{2m} \\nabla^2 \\psi\\left(\\vec{r},t)\\right) = \\frac{p^2}{2m} \\psi(\\vec{r},t)'},
  '9958485859': {'latex': '\\frac{-\\hbar^2}{2m} \\nabla^2 \\psi\\left(\\vec{r},t)\\right) = i \\hbar \\frac{\\partial}{\\partial t}\\psi(\\vec{r},t)'},
  '1158485859': {'latex': '\\frac{-\\hbar^2}{2m} \\nabla^2 = {\\cal H}'},
  '2258485859': {'latex': '{\\cal H} \\psi\\left(\\vec{r},t)\\right) = i \\hbar \\frac{\\partial}{\\partial t}\\psi(\\vec{r},t)'},
  '9596004948': {'latex': 'x = \\bra{\\psi_{\\alpha}} \\hat{A} \\ket{\\psi_{\\beta}}'},
  '1010393944': {'latex': 'x = \\bra{\\psi_{\\alpha}} a_{\\beta} \\ket{\\psi_{\\beta}}'},
  '1395858355': {'latex': 'x = \\bra{\\psi_{\\alpha}} a_{\\alpha} \\ket{\\psi_{\\beta}}'},
  '2394240499': {'latex': 'x = a_{\\beta} \\braket{\\psi_{\\alpha}}{\\psi_{\\beta}}'},
  '3943939590': {'latex': 'x = a_{\\alpha} \\braket{\\psi_{\\alpha}}{\\psi_{\\beta}}'},
  '1203938249': {'latex': 'a_{\\beta} \\braket{\\psi_{\\alpha}}{\\psi_{\\beta}} = a_{\\alpha} \\braket{\\psi_{\\alpha}}{\\psi_{\\beta}}'},
  '3924948349': {'latex': 'a_{\\beta} \\braket{\\psi_{\\alpha}}{\\psi_{\\beta}} - a_{\\alpha} \\braket{\\psi_{\\alpha}}{\\psi_{\\beta}} = 0'},
  '2394935831': {'latex': '( a_{\\beta} - a_{\\alpha} ) \\braket{\\psi_{\\alpha}}{\\psi_{\\beta}} = 0'},
  '9999999975': {'latex': '\\bra{\\psi} \\hat{A} \\ket{\\psi} = \\langle a \\rangle'},
  '2394935835': {'latex': '\\left(\\bra{\\psi} \\hat{A} \\ket{\\psi} \\right)^+= \\left(\\langle a \\rangle\\right)^+'},
  '1010393913': {'latex': '\\bra{\\psi} \\hat{A}^+ \\ket{\\psi}=\\langle a \\rangle^*'},
  '9294858532': {'latex': '\\hat{A}^+=\\hat{A}'},
  '4948934890': {'latex': '\\bra{\\psi} \\hat{A} \\ket{\\psi}=\\langle a \\rangle^*'},
  '2848934890': {'latex': '\\langle a \\rangle^*=\\langle a \\rangle'},
  '3585845894': {'latex': '\\langle \\left(x-\\langle x \\rangle\\right)^2 \\rangle=\\langle x^2 \\rangle-\\langle x \\rangle^2'},
  '8399484849': {'latex': '\\langle x^2 -2x\\langle x \\rangle+\\langle x \\rangle^2 \\rangle=\\langle x^2 \\rangle-\\langle x \\rangle^2'},
  '2404934990': {'latex': '\\langle x^2\\rangle -2\\langle x \\rangle\\langle x \\rangle+\\langle x \\rangle^2=\\langle x^2 \\rangle-\\langle x \\rangle^2'},
  '4949359835': {'latex': '\\langle x^2\\rangle -2\\langle x^2 \\rangle+\\langle x \\rangle^2=\\langle x^2 \\rangle-\\langle x \\rangle^2'},
  '2494533900': {'latex': '\\langle x^2\\rangle -\\langle x \\rangle^2=\\langle x^2 \\rangle-\\langle x \\rangle^2'},
  '1638282134': {'latex': '\\vec{p}_{before} = \\vec{p}_{after}'},
  '8257621077': {'latex': '\\vec{p}_{before} = \\vec{p}_{1}'},
  '8311458118': {'latex': '\\vec{p}_{after} = \\vec{p}_{2}+\\vec{p}_{electron}'},
  '3951205425': {'latex': '\\vec{p}_{after} = \\vec{p}_{1}'},
  '8139187332': {'latex': '\\vec{p}_{1} = \\vec{p}_{2}+\\vec{p}_{electron}'},
  '5530148480': {'latex': '\\vec{p}_{1}-\\vec{p}_{2}=\\vec{p}_{electron}'},
  '7917051060': {'latex': '\\vec{p}_{electron} = \\vec{p}_{1}-\\vec{p}_{2}'},
  '6742123016': {'latex': '\\vec{p}_{electron}\\cdot\\vec{p}_{electron} = (\\vec{p}_{1}\\cdot\\vec{p}_{1})+(\\vec{p}_{2}\\cdot\\vec{p}_{2})-2(\\vec{p}_{1}\\cdot\\vec{p}_{2})'}
}

# the glue of the Physics Derivation Graph is a concept called an "Inference rule"
# An inference rule relates one or more expressions in a given step
# the order is (all feeds), (all inputs), (all outputs)
# https://github.com/allofphysicsgraph/proofofconcept/wiki/Inference-Rules
# convention for latex string: feeds and inputs outputs are all referenced, and in that order
dat['inference rules'] =  {
    'multiply LHS by unity': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Multiply LHS of Eq.~\\ref{eq:#2} by 1, which in this case is $#1$; yields Eq.~\\ref{eq:#3}'},
    'multiply RHS by Unity': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Multiply RHS of Eq.~\\ref{eq:#2} by 1, which in this case is $#1$; yields Eq.~\\ref{eq:#3}'},
    'add zero to LHS': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Add zero to LHS of Eq.~\\ref{eq:#2}, where $0=#1$; yields Eq.~\\ref{eq:#3}.'},
    'add zero to RHS': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Add zero to RHS of Eq.~\\ref{eq:#2}, where $0=#1$; yields Eq.~\\ref{eq:#3}.'},
    'add X to both sides': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Add $#1$ to both sides of Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'subtract X from both sides': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Subtract $#1$ from both sides of Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'multiply both sides by': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Multiply both sides of Eq.~\\ref{eq:#2} by $#1$; yields Eq.~\\ref{eq:#3}.'},
    'divide both sides by': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Divide both sides of Eq.~\\ref{eq:#2} by $#1$; yields Eq.~\\ref{eq:#3}.'},
    'declare initial expr': {'number of feeds':0, 'number of inputs':0, 'number of outputs':1,
                    'latex': 'Eq.~\\ref{eq:#1} is an initial equation.'},
    'declare assumption': {'number of feeds':0, 'number of inputs':0, 'number of outputs':1,
                    'latex': 'Eq.~\\ref{eq:#1} is an assumption.'},
    'declare guess solution': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Judicious choice as a guessed solution to Eq.~\\ref{eq:#1} is'},
    'declare final expr': {'number of feeds':0, 'number of inputs':1, 'number of outputs':0,
                    'latex': 'Eq.~\\ref{eq:#1} is one of the final equations.'},
    'declare identity': {'number of feeds':0, 'number of inputs':0, 'number of outputs':1,
                    'latex': 'Eq.~\\ref{eq:#1} is an identity.'},
    'boundary condition': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'A boundary condition for Eq.~\\ref{eq:#1} is Eq.~\\ref{eq:#2}'},
    'substitute X for Y': {'number of feeds':2, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Substitute $#1$ for $#2$ in Eq.~\\ref{eq:#3}; yields Eq.~\\ref{eq:#4}.'},
    'function is even': {'number of feeds':3, 'number of inputs':1, 'number of outputs':1,
                    'latex': '$#1$ is even with respect to $#2$, so replace $#1$ with $#3$ in Eq.~\\ref{eq:#4}; yields Eq.~\\ref{eq:#5}.'},
    'function is odd': {'number of feeds':3, 'number of inputs':1, 'number of outputs':1,
                    'latex': '$#1$ is odd with respect to $#2$, so replace $#1$ with $#3$ in Eq.~\\ref{eq:#4}; yields Eq.~\\ref{eq:#5}.'},
    'assume N dimensions': {'number of feeds':1, 'number of inputs':0, 'number of outputs':1,
                    'latex': 'Assume $#1$ dimensions in Eq.~\\ref{eq:#2}.'}, 
    'combine like terms': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Combine like terms in Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'simplify': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Simplify Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'replace curl with LeviCevita summation contravariant': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Replace curl in Eq.~\\ref{eq:#1} with Levi-Cevita contravariant; yields Eq.~\\ref{eq:#2}.'},
    'replace summation notation with vector notation': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Replace summation notation in Eq.~\\ref{eq:#1} with vector notation; yields Eq.~\\ref{eq:#2}.'},
    'replace scalar with vector': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Replace scalar variables in Eq.~\\ref{eq:#1} with equivalent vector variables; yields Eq.~\\ref{eq:#2}.'},
    'X cross both sides by': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Take cross product of $#1$ and Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'both sides cross X': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Take cross product of Eq.~\\ref{eq:#2} and $#1$; yields Eq.~\\ref{eq:#3}'},
    'X dot both sides': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Take inner product of $#1$ with Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'both sides dot X': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Take inner product of Eq.~\\ref{eq:#2} with $#1$; yields Eq.~\\ref{eq:#3}'},
    'conjugate function X': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Conjugate $#1$ in Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'conjugate both sides': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Conjugate both sides of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'conjugate transpose both sides': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Conjugate transpose of both sides of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'distribute conjugate transpose to factors': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Distribute conjugate transpose to factors in Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'distribute conjugate to factors': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Distribute conjugate to factors in Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'expand magnitude to conjugate': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Expand $#1$ in Eq.~\\ref{eq:#2} with conjugate; yields Eq.~\\ref{eq:#3}.'},
    'expand integrand': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Expand integrand of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'indefinite integral over': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Indefinite integral of both sides of Eq.~\\ref{eq:#2} over $#1$; yields Eq.~\\ref{eq:#3}.'},
    'indefinite integration': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Indefinite integral of both sides of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'indefinite integrate LHS over': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Indefinite integral of LHS of Eq.~\\ref{eq:#2} over $#1$; yields Eq.~\\ref{eq:#3}.'},
    'indefinite intgrate RHS over': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Indefinite integral of RHS of Eq.~\\ref{eq:#2} over $#1$; yields Eq.~\\ref{eq:#3}.'},
    'integrate over from to': {'number of feeds':3, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Integrate Eq.~\\ref{eq:#4} over $#1$ from lower limit $#2$ to upper limit $#3$; yields Eq.~\\ref{eq:#5}.'},
    'evaluate definite integral': {'number of feeds':0, 'number of inputs':2, 'number of outputs':1,
                    'latex': 'Integrate Eq.~\\ref{eq:#1} using identity Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'take curl of both sides': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Apply curl to both sides of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'apply gradient to scalar function': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Apply gradient to both sides of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'apply divergence': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Apply divergence to both sides of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'differentiate with respect to': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Differentiate Eq.~\\ref{eq:#2} with respect to $#1$; yields Eq.~\\ref{eq:#3}.'},
    'partially differentiate with respect to': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Partially differentiate Eq.~\\ref{eq:#2} with respect to $#1$; yields Eq.~\\ref{eq:#3}.'},
    'solve for X': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Solve Eq.~\\ref{eq:#2} for $#1$; yields Eq.~\\ref{eq:#3}.'},
    'factor out X': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Factor $#1$ from Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'factor out X from LHS': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Factor $#1$ from the LHS of Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'factor out X from RHS': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Factor $#1$ from the RHS of Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'apply operator to Ket': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Apply operator to ket in Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'apply operator to Bra': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Apply operator to bra in Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'make expr power': {'number of feeds':1, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Make Eq.~\\ref{eq:#2} the power of $#1$; yields Eq.~\\ref{eq:#3}.'},
    'raise both sides to power': {'number of feeds':1, 'number of inputs':1, 'number of outputs':2,
                    'latex': 'Raise both sides of Eq.~\\ref{eq:#2} to $#1$; yields Eq.~\\ref{eq:#3} and Eq.~\\ref{eq:#4}.'},
    'select real parts': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Select real parts of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'select imaginary parts': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Select imaginary parts of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'expand LHS': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Expand the LHS of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'expand RHS': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Expand the RHS of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'swap LHS with RHS': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Swap LHS of Eq.~\\ref{eq:#1} with RHS; yields Eq.~\\ref{eq:#2}.'},
    'sum exponents': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Sum exponents on LHS and RHS of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'sum exponents LHS': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Sum exponents on LHS of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'sum exponents RHS': {'number of feeds':0, 'number of inputs':1, 'number of outputs':1,
                    'latex': 'Sum exponents on RHS of Eq.~\\ref{eq:#1}; yields Eq.~\\ref{eq:#2}.'},
    'add expr X to expr Y': {'number of feeds':0, 'number of inputs':2, 'number of outputs':1,
                    'latex': 'Add Eq.~\\ref{eq:#1} to Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#2}.'},
    'sub RHS of expr X into expr Y': {'number of feeds':0, 'number of inputs':2, 'number of outputs':1,
                    'latex': 'Substitute RHS of Eq.~\\ref{eq:#1} into Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'sub LHS of expr X into expr Y': {'number of feeds':0, 'number of inputs':2, 'number of outputs':1,
                    'latex': 'Substitute LHS of Eq.~\\ref{eq:#1} into Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'mult expr X by expr Y': {'number of feeds':0, 'number of inputs':2, 'number of outputs':1,
                    'latex': 'Multiply Eq.~\\ref{eq:#1} by Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'LHS of expr X eq LHS of expr Y': {'number of feeds':0, 'number of inputs':2, 'number of outputs':1,
                    'latex': 'LHS of Eq.~\\ref{eq:#1} is equal to LHS of Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'RHS of expr X eq RHS of expr Y': {'number of feeds':0, 'number of inputs':2, 'number of outputs':1,
                    'latex': 'RHS of Eq.~\\ref{eq:#1} is equal to RHS of Eq.~\\ref{eq:#2}; yields Eq.~\\ref{eq:#3}.'},
    'expr X is true under condition expr Y': {'number of feeds':0, 'number of inputs':2, 'number of outputs':1,
                    'latex': 'Eq.~\\ref{eq:#1} is valid when Eq.~\\ref{eq:#2} occurs; yields Eq.~\\ref{eq:#3}.'},
    'claim expr X equals expr Y': {'number of feeds':0, 'number of inputs':2, 'number of outputs':0,
                    'latex': 'Thus we see that Eq.~\\ref{eq:#1} is equivalent to Eq.~\\ref{eq:#2}.'},
    'claim LHS equals RHS': {'number of feeds':0, 'number of inputs':1, 'number of outputs':0,
                    'latex': 'Thus we see that LHS of Eq.~\\ref{eq:#1} is equal to RHS.'},
    'normalization condition': {'number of feeds':0, 'number of inputs':0, 'number of outputs':1,
                    'latex': 'Normalization condition is Eq.~\\ref{eq:#1}.'}
}

# A derivation is comprised of steps.
# Each step has 0 or more inputs, 0 or more outputs, 0 or more feeds, and one inference rule
# Each step is assocaited with a unique numeric identifier
# The inputs and outputs of each step have a "local ID" which is associated with a unique global ID. The global ID is associated with an expression
dat['derivations'] = {
  'fun deriv': {
     # key is "step ID"
     '4928482': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['9428000'], # "expr local ID"
                 'linear index': 1}, # linear index for PDF and for graph orientation
     '2948592': {'inf rule': 'add X to both sides',
                 'inputs':  ['9428000'],
                 'feeds':   ['3190000'],
                 'outputs': ['3921000'],
                 'linear index': 2},
     '9492942': {'inf rule': 'declare final expr',
                 'inputs':  ['3921000'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 3}},
  'another deriv': {
     '0491182': {'inf rule':'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['9128000'],
                 'linear index': 1}
                   },
  'frequency relations': {
     '2303943': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['3293094'],
                 'linear index': 1},
     '3049480': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['3294004'],
                 'linear index': 2},
     '8332941': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['9214650'],
                 'linear index': 3},
     '9103516': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['8482459'],
                 'linear index': 4},
     '3832748': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['8374556', '3293094'],
                 'feeds':   [],
                 'outputs': ['8394853'],
                 'linear index': 5},
     '2939482': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['8482459', '3294004'],
                 'feeds':   [],
                 'outputs': ['3993940'],
                 'linear index': 6},
     '8946983': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['3993940', '8394853'],
                 'feeds':   [],
                 'outputs': ['2934848'],
                 'linear index': 7},
     '6822583': {'inf rule': 'multiply both sides by',
                 'inputs':  ['8482459'],
                 'feeds':   ['5749291'],
                 'outputs': ['8341200'],
                 'linear index': 8},
     '9483715': {'inf rule': 'divide both sides by',
                 'inputs':  ['8341200'],
                 'feeds':   ['8837284'],
                 'outputs': ['9380032'],
                 'linear index': 9},
     '9483843': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['9380032', '9214650'],
                 'feeds':   [],
                 'outputs': ['8374556'],
                 'linear index': 10},
     '8345721': {'inf rule': 'declare final expr',
                 'inputs':  ['2934848'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 11},
      },
  'quadratic equation derivation': {
     '8494551': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['8882098', '9091270'],
                 'linear index': 1},
     '8492932': {'inf rule': 'divide both sides by',
                 'inputs':  ['8882098'],
                 'feeds':   ['2424922'],
                 'outputs': ['7777621'],
                 'linear index': 3},
     '5829110': {'inf rule': 'subtract X from both sides',
                 'inputs':  ['7777621'],
                 'feeds':   ['6644853'],
                 'outputs': ['1212129'],
                 'linear index': 4},
     '2500423': {'inf rule': 'add X to both sides',
                 'inputs':  ['1212129'],
                 'feeds':   ['4307451'],
                 'outputs': ['1120000'],
                 'linear index': 5},
     '8321038': {'inf rule': 'substitute X for Y',
                 'inputs':  ['9091270'],
                 'feeds':   ['4858592', '0999900'],
                 'outputs': ['1239010'],
                 'linear index': 6},
     '7996484': {'inf rule': 'simplify',
                 'inputs':  ['1239010'],
                 'feeds':   [],
                 'outputs': ['1734000'],
                 'linear index': 7},
     '7777777': {'inf rule': 'LHS of expr X eq LHS of expr Y',
                 'inputs':  ['1120000', '1734000'],
                 'feeds':   [],
                 'outputs': ['2985412'],
                 'linear index': 8},
     '7487443': {'inf rule': 'raise both sides to power',
                 'inputs':  ['2985412'],
                 'feeds':   ['2367209'],
                 'outputs': ['6608123', '6608102'],
                 'linear index': 9},
     '2200910': {'inf rule': 'subtract X from both sides',
                 'inputs':  ['6608123', '6608102'],
                 'feeds':   ['2838490', '2449291'],
                 'outputs': ['4433112', '2657355'],
                 'linear index': 10},
     '2211910': {'inf rule': 'simplify',
                 'inputs':  ['4433112', '2657355'],
                 'feeds':   [],
                 'outputs': ['8761200', '8811221'],
                 'linear index': 11},
     '8359402': {'inf rule': 'declare final expr',
                 'inputs':  ['8761200', '8811221'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 14},
      },
  'euler equation proof': {
     '7364656': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['1029383'],
                 'linear index': 1},
     '6463728': {'inf rule': 'differentiate with respect to',
                 'inputs':  ['1029383'],
                 'feeds':   ['7636749'],
                 'outputs': ['1838300'],
                 'linear index': 2},
     '4614728': {'inf rule': 'factor out X from RHS',
                 'inputs':  ['1838300'],
                 'feeds':   ['7563791'],
                 'outputs': ['2948271'],
                 'linear index': 3},
     '7466748': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['1029383', '2948271'],
                 'feeds':   [],
                 'outputs': ['9038289'],
                 'linear index': 4},
     '2741906': {'inf rule': 'multiply both sides by',
                 'inputs':  ['9038289'],
                 'feeds':   ['3954314'],
                 'outputs': ['1111289'],
                 'linear index': 5},
     '6466378': {'inf rule': 'divide both sides by',
                 'inputs':  ['1111289'],
                 'feeds':   ['9877781'],
                 'outputs': ['8883737'],
                 'linear index': 6},
     '1848471': {'inf rule': 'indefinite intgrate RHS over',
                 'inputs':  ['8883737'],
                 'feeds':   ['4264724'],
                 'outputs': ['9984877'],
                 'linear index': 7},
     '6462728': {'inf rule': 'indefinite intgrate RHS over',
                 'inputs':  ['9984877'],
                 'feeds':   ['6563727'],
                 'outputs': ['3747585'],
                 'linear index': 8},
     '7563728': {'inf rule': 'swap LHS with RHS',
                 'inputs':  ['3747585'],
                 'feeds':   [],
                 'outputs': ['3784785'],
                 'linear index': 9},
     '1029890': {'inf rule': 'make expr power',
                 'inputs':  ['3784785'],
                 'feeds':   ['6656532'],
                 'outputs': ['9587572'],
                 'linear index': 10},
     '7566272': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['9587572', '1029383'],
                 'feeds':   [],
                 'outputs': ['8888888'],
                 'linear index': 11},
     '7561612': {'inf rule': 'declare final expr',
                 'inputs':  ['8888888'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 12},
      },
  'euler equation trig sqrt': {
     '7663728': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['8888888'],
                 'linear index': 1},
     '6839583': {'inf rule': 'substitute X for Y',
                 'inputs':  ['8888888'],
                 'feeds':   ['4089571', '4582412'],
                 'outputs': ['9999999'],
                 'linear index': 2},
     '9582956': {'inf rule': 'LHS of expr X eq LHS of expr Y',
                 'inputs':  ['4444444', '9999999'],
                 'feeds':   [],
                 'outputs': ['2222222'],
                 'linear index': 3},
     '8492847': {'inf rule': 'mult expr X by expr Y',
                 'inputs':  ['8888888'],
                 'feeds':   [],
                 'outputs': ['3333333'],
                 'linear index': 4},
     '5832058': {'inf rule': 'expand RHS',
                 'inputs':  ['3333333'],
                 'feeds':   [],
                 'outputs': ['4444444'],
                 'linear index': 5},
     '8374590': {'inf rule': 'select realparts',
                 'inputs':  ['2222222'],
                 'feeds':   [],
                 'outputs': ['5828294'],
                 'linear index': 6},
     '8374625': {'inf rule': 'add X to both sides',
                 'inputs':  ['5828294'],
                 'feeds':   ['7894942'],
                 'outputs': ['4890284'],
                 'linear index': 7},
     '3040493': {'inf rule': 'declare identity',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['9385720'],
                 'linear index': 8},
     '9832430': {'inf rule': 'subtract X from both sides',
                 'inputs':  ['9385720'],
                 'feeds':   ['1111111'],
                 'outputs': ['9123670'],
                 'linear index': 9},
     '3984721': {'inf rule': 'swap LHS with RHS',
                 'inputs':  ['4890284'],
                 'feeds':   [],
                 'outputs': ['2936550'],
                 'linear index': 10},
     '9483240': {'inf rule': 'LHS of expr X eq LHS of expr Y',
                 'inputs':  ['2936550', '9123670'],
                 'feeds':   [],
                 'outputs': ['9481000'],
                 'linear index': 11},
     '7563628': {'inf rule': 'subtract X from both sides',
                 'inputs':  ['9481000'],
                 'feeds':   ['6466214'],
                 'outputs': ['7472641'],
                 'linear index': 12},
     '7572728': {'inf rule': 'add X to both sides',
                 'inputs':  ['7472641'],
                 'feeds':   ['7471778'],
                 'outputs': ['1029911'],
                 'linear index': 13},
     '7566277': {'inf rule': 'subtract X from both sides',
                 'inputs':  ['1029911'],
                 'feeds':   ['8842811'],
                 'outputs': ['7472666'],
                 'linear index': 14},
     '3841414': {'inf rule': 'divide both sides by',
                 'inputs':  ['7472666'],
                 'feeds':   ['3838111'],
                 'outputs': ['1231131'],
                 'linear index': 15},
     '1383414': {'inf rule': 'declare final expr',
                 'inputs':  ['1231131'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 16},
      },
  'example of Godel problem': {
     '7566367': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['7572712'],
                 'linear index': 1},
     '4647381': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['4738297'],
                 'linear index': 2},
     '8673948': {'inf rule': 'LHS of expr X eq LHS of expr Y',
                 'inputs':  ['7572712', '4738297'],
                 'feeds':   [],
                 'outputs': ['4627482', '2845892'],
                 'linear index': 3},
     '8674920': {'inf rule': 'swap LHS with RHS',
                 'inputs':  ['4738297'],
                 'feeds':   [],
                 'outputs': ['7572712'],
                 'linear index': 4},
      },
  'particle in a 1D box': {
     '8576627': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['7572748'],
                 'linear index': 1},
     '1384011': {'inf rule': 'declare guess solution',
                 'inputs':  ['7572748'],
                 'feeds':   [],
                 'outputs': ['7572118'],
                 'linear index': 2},
     '8572771': {'inf rule': 'boundary condition',
                 'inputs':  ['7572748'],
                 'feeds':   [],
                 'outputs': ['8577781'],
                 'linear index': 3},
     '8572778': {'inf rule': 'boundary condition',
                 'inputs':  ['7572748'],
                 'feeds':   [],
                 'outputs': ['8585727'],
                 'linear index': 4},
     '8571277': {'inf rule': 'LHS of expr X eq LHS of expr Y',
                 'inputs':  ['8577781', '7572118'],
                 'feeds':   [],
                 'outputs': ['7547581'],
                 'linear index': 5},
     '8576571': {'inf rule': 'simplify',
                 'inputs':  ['7547581'],
                 'feeds':   [],
                 'outputs': ['7572859'],
                 'linear index': 6},
     '8572265': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['7572859', '7572118'],
                 'feeds':   [],
                 'outputs': ['7562671'],
                 'linear index': 7},
     '9686782': {'inf rule': 'LHS of expr X eq LHS of expr Y',
                 'inputs':  ['8585727', '7562671'],
                 'feeds':   [],
                 'outputs': ['8577672'],
                 'linear index': 8},
     '8575717': {'inf rule': 'declare identity',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['8577711'],
                 'linear index': 9},
     '8575627': {'inf rule': 'expr X is true under condition expr Y',
                 'inputs':  ['8577672', '8577711'],
                 'feeds':   [],
                 'outputs': ['9847600'],
                 'linear index': 10},
     '9114413': {'inf rule': 'divide both sides by',
                 'inputs':  ['9847600'],
                 'feeds':   ['1334112'],
                 'outputs': ['9495882'],
                 'linear index': 11},
     '8575761': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['9495882', '7562671'],
                 'feeds':   [],
                 'outputs': ['3452131'],
                 'linear index': 12},
     '4434559': {'inf rule': 'normalizationCondition',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['7575626'],
                 'linear index': 13},
     '5751725': {'inf rule': 'conjugateFunctionX',
                 'inputs':  ['3452131'],
                 'feeds':   ['9587738'],
                 'outputs': ['3452132'],
                 'linear index': 14},
     '4757567': {'inf rule': 'swap LHS with RHS',
                 'inputs':  ['7575626'],
                 'feeds':   [],
                 'outputs': ['5577567'],
                 'linear index': 15},
     '7455643': {'inf rule': 'expand magnitude to conjugate',
                 'inputs':  ['5577567'],
                 'feeds':   ['9458842'],
                 'outputs': ['0595847'],
                 'linear index': 16},
     '4455453': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['3452131', '0595847'],
                 'feeds':   [],
                 'outputs': ['0495950'],
                 'linear index': 17},
     '4948339': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['3452132', '0495950'],
                 'feeds':   [],
                 'outputs': ['8478550'],
                 'linear index': 18},
     '8485725': {'inf rule': 'declare identity',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['1231131'],
                 'linear index': 19},
     '1003049': {'inf rule': 'substitute X for Y',
                 'inputs':  ['1231131'],
                 'feeds':   ['9484724', '4934845'],
                 'outputs': ['0100404'],
                 'linear index': 20},
     '8576741': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['0100404', '8478550'],
                 'feeds':   [],
                 'outputs': ['9485800'],
                 'linear index': 21},
     '5940300': {'inf rule': 'divide both sides by',
                 'inputs':  ['9485800'],
                 'feeds':   ['0040490'],
                 'outputs': ['0495054'],
                 'linear index': 22},
     '3949284': {'inf rule': 'expandIntegrand',
                 'inputs':  ['0495054'],
                 'feeds':   [],
                 'outputs': ['0203020'],
                 'linear index': 23},
     '3048800': {'inf rule': 'declare identity',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['3992939'],
                 'linear index': 24},
     '4485722': {'inf rule': 'substitute X for Y',
                 'inputs':  ['3992939'],
                 'feeds':   ['9485858', '4831494'],
                 'outputs': ['4948377'],
                 'linear index': 25},
     '3048100': {'inf rule': 'declare identity',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['0021030'],
                 'linear index': 26},
     '1911919': {'inf rule': 'substitute X for Y',
                 'inputs':  ['0021030'],
                 'feeds':   ['2929944', '4948585'],
                 'outputs': ['9339495'],
                 'linear index': 27},
     '3329831': {'inf rule': 'EvaluateDefiniteIntegral',
                 'inputs':  ['0203020', '9339495'],
                 'feeds':   [],
                 'outputs': ['8584733'],
                 'linear index': 28},
     '8485747': {'inf rule': 'EvaluateDefiniteIntegral',
                 'inputs':  ['4948377', '8584733'],
                 'feeds':   [],
                 'outputs': ['0405049'],
                 'linear index': 29},
     '8373472': {'inf rule': 'simplify',
                 'inputs':  ['0405049'],
                 'feeds':   [],
                 'outputs': ['9493949'],
                 'linear index': 30},
     '5859994': {'inf rule': 'multiply both sides by',
                 'inputs':  ['9493949'],
                 'feeds':   ['9485857'],
                 'outputs': ['1029384'],
                 'linear index': 31},
     '1293948': {'inf rule': 'raise both sides to power',
                 'inputs':  ['1029384'],
                 'feeds':   ['9594995'],
                 'outputs': ['9394857', '9394858'],
                 'linear index': 32},
     '1384935': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['9394857', '3452131'],
                 'feeds':   [],
                 'outputs': ['8474766'],
                 'linear index': 33},
     '3847567': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['9394858', '3452131'],
                 'feeds':   [],
                 'outputs': ['8474765'],
                 'linear index': 34},
     '7474753': {'inf rule': 'declare final expr',
                 'inputs':  ['8474765', '8474766'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 35},
     '4757743': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['7572748', '7572118'],
                 'feeds':   [],
                 'outputs': ['2838288'],
                 'linear index': 37},
     '2029394': {'inf rule': 'simplify',
                 'inputs':  ['2838288'],
                 'feeds':   [],
                 'outputs': ['8474762'],
                 'linear index': 38},
     '9394948': {'inf rule': 'simplify',
                 'inputs':  ['8474762'],
                 'feeds':   [],
                 'outputs': ['1214762'],
                 'linear index': 39},
     '7374289': {'inf rule': 'claim LHS equals RHS',
                 'inputs':  ['1214762'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 40},
      },
  'maxwell to electric field wave equation': {
     '2932848': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['4757562', '1199299', '4857731'],
                 'linear index': 1},
     '1010301': {'inf rule': 'partially differentiate with respect to',
                 'inputs':  ['1199299'],
                 'feeds':   ['5626421'],
                 'outputs': ['4642245'],
                 'linear index': 3},
     '4224853': {'inf rule': 'take curl of both sides',
                 'inputs':  ['4757562'],
                 'feeds':   [],
                 'outputs': ['2392932'],
                 'linear index': 4},
     '1939442': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['2392932', '4642245'],
                 'feeds':   [],
                 'outputs': ['2962831'],
                 'linear index': 5},
     '3837471': {'inf rule': 'declare assumption',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['3984852'],
                 'linear index': 7},
     '5656372': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['4857731', '3984852'],
                 'feeds':   [],
                 'outputs': ['2837471'],
                 'linear index': 8},
     '3948573': {'inf rule': 'declare identity', # this was 3948572 which conflicts with a step in 'curl curl identity'
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['1939485'],
                 'linear index': 9},
     '4655746': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['1939485', '2837471'],
                 'feeds':   [],
                 'outputs': ['3738373'],
                 'linear index': 10},
     '3737384': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['3738373', '2962831'],
                 'feeds':   [],
                 'outputs': ['4758592'],
                 'linear index': 11},
     '3948584': {'inf rule': 'declare final expr',
                 'inputs':  ['4758592'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 12},
      },
  'electric field wave equation time dependent to time independent': {
     '7419980': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['4758592'],
                 'linear index': 1},
     '3568093': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['9393848'],
                 'linear index': 2},
     '4585829': {'inf rule': 'declare guess solution',
                 'inputs':  ['4758592'],
                 'feeds':   [],
                 'outputs': ['3994928'],
                 'linear index': 3},
     '4858282': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['9393848', '4758592'],
                 'feeds':   [],
                 'outputs': ['3839493'],
                 'linear index': 4},
     '1002928': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['3994928', '3839493'],
                 'feeds':   [],
                 'outputs': ['1029393'],
                 'linear index': 5},
     '2319391': {'inf rule': 'differentiate with respect to',
                 'inputs':  ['1029393'],
                 'feeds':   ['3232242'],
                 'outputs': ['2939392'],
                 'linear index': 6},
     '4955966': {'inf rule': 'differentiate with respect to',
                 'inputs':  ['2939392'],
                 'feeds':   ['3232242'],
                 'outputs': ['4958573'],
                 'linear index': 7},
     '8485758': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['4949582'],
                 'linear index': 8},
     '5839535': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['4958573', '4949582'],
                 'feeds':   [],
                 'outputs': ['9495903'],
                 'linear index': 9},
     '4958883': {'inf rule': 'simplify',
                 'inputs':  ['9495903'],
                 'feeds':   [],
                 'outputs': ['3949492'],
                 'linear index': 10},
     '5495827': {'inf rule': 'declare final expr',
                 'inputs':  ['3949492'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 11},
      },
  'euler equation trig relations': {
     '7473895': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['8888888'],
                 'linear index': 1},
     '3848927': {'inf rule': 'substitute X for Y',
                 'inputs':  ['8888888'],
                 'feeds':   ['2393922', '3949052'],
                 'outputs': ['8888881'],
                 'linear index': 2},
     '9595949': {'inf rule': 'function is even',
                 'inputs':  ['8888881'],
                 'feeds':   ['4849392', '1030901', '3413423'],
                 'outputs': ['8888882'],
                 'linear index': 3},
     '4747288': {'inf rule': 'function is odd',
                 'inputs':  ['8888882'],
                 'feeds':   ['3919391', '3981813', '2919191'],
                 'outputs': ['8888883'],
                 'linear index': 4},
     '3848592': {'inf rule': 'add expr X to expr Y',
                 'inputs':  ['8888888', '8888883'],
                 'feeds':   [],
                 'outputs': ['2939484'],
                 'linear index': 5},
     '1928392': {'inf rule': 'divide both sides by',
                 'inputs':  ['2939484'],
                 'feeds':   ['4829194'],
                 'outputs': ['4383592'],
                 'linear index': 6},
     '2949492': {'inf rule': 'swap LHS with RHS',
                 'inputs':  ['4383592'],
                 'feeds':   [],
                 'outputs': ['4849888'],
                 'linear index': 7},
     '2384942': {'inf rule': 'declare final expr',
                 'inputs':  ['4849888', '4849959'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 8},
     '3848924': {'inf rule': 'multiply both sides by',
                 'inputs':  ['8888883'],
                 'feeds':   ['3747849'],
                 'outputs': ['3194924'],
                 'linear index': 9},
     '2939404': {'inf rule': 'add expr X to expr Y',
                 'inputs':  ['8888888', '3194924'],
                 'feeds':   [],
                 'outputs': ['4825483'],
                 'linear index': 10},
     '2849492': {'inf rule': 'divide both sides by',
                 'inputs':  ['4825483'],
                 'feeds':   ['1921933'],
                 'outputs': ['1133483'],
                 'linear index': 11},
     '4294921': {'inf rule': 'swap LHS with RHS',
                 'inputs':  ['1133483'],
                 'feeds':   [],
                 'outputs': ['4849959'],
                 'linear index': 12},
      },
  'integration by parts': {
     '4952082': {'inf rule': 'declare identity',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['3494854'],
                 'linear index': 1},
     '4842942': {'inf rule': 'subtract X from both sides',
                 'inputs':  ['3494854'],
                 'feeds':   ['9492929'],
                 'outputs': ['2938188'],
                 'linear index': 2},
     '4848592': {'inf rule': 'swap LHS with RHS',
                 'inputs':  ['2938188'],
                 'feeds':   [],
                 'outputs': ['2938190'],
                 'linear index': 3},
     '8483953': {'inf rule': 'indefinite integration',
                 'inputs':  ['2938190'],
                 'feeds':   [],
                 'outputs': ['3848329'],
                 'linear index': 4},
     '2839422': {'inf rule': 'declare final expr',
                 'inputs':  ['3848329'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 5},
      },
  'curl curl identity': {
     '3948572': {'inf rule': 'declare identity',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['1939485'],
                 'linear index': 1},
     '2339482': {'inf rule': 'replace curl with LeviCevita summation contravariant',
                 'inputs':  ['1939485'],
                 'feeds':   [],
                 'outputs': ['9485482'],
                 'linear index': 2},
     '3948552': {'inf rule': 'replace curl with LeviCevita summation contravariant',
                 'inputs':  ['9485482'],
                 'feeds':   [],
                 'outputs': ['2941319'],
                 'linear index': 3},
     '4295822': {'inf rule': 'declare identity',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['2934842'],
                 'linear index': 4},
     '2930454': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['2934842', '2941319'],
                 'feeds':   [],
                 'outputs': ['3949292'],
                 'linear index': 5},
     '3848292': {'inf rule': 'simplify',
                 'inputs':  ['3949292'],
                 'feeds':   [],
                 'outputs': ['3844221'],
                 'linear index': 6},
     '3838233': {'inf rule': 'simplify',
                 'inputs':  ['3844221'],
                 'feeds':   [],
                 'outputs': ['3948472'],
                 'linear index': 7},
     '1393411': {'inf rule': 'replace summation notation with vector notation',
                 'inputs':  ['3948472'],
                 'feeds':   [],
                 'outputs': ['2109231'],
                 'linear index': 8},
     '3949211': {'inf rule': 'claim LHS equals RHS',
                 'inputs':  ['2109231'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 9},
      },
  'derivation of Schrodinger Eq': {
     '1204921': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['2934848'],
                 'linear index': 1},
     '2919311': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['9214650'],
                 'linear index': 2},
     '1294844': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['2949002'],
                 'linear index': 3},
     '9394842': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['1203491'],
                 'linear index': 4},
     '3934948': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['3499522'],
                 'linear index': 5},
     '3949482': {'inf rule': 'divide both sides by',
                 'inputs':  ['9214650'],
                 'feeds':   ['2940021'],
                 'outputs': ['2939402'],
                 'linear index': 6},
     '1294945': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['2939402', '3499522'],
                 'feeds':   [],
                 'outputs': ['2949821'],
                 'linear index': 7},
     '2930492': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['2949002', '2949821'],
                 'feeds':   [],
                 'outputs': ['3741728'],
                 'linear index': 8},
     '3919384': {'inf rule': 'divide both sides by',
                 'inputs':  ['3741728'],
                 'feeds':   ['3949921'],
                 'outputs': ['4499582'],
                 'linear index': 9},
     '2900428': {'inf rule': 'divide both sides by',
                 'inputs':  ['2934848'],
                 'feeds':   ['1209482'],
                 'outputs': ['1039485'],
                 'linear index': 10},
     '1204945': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['1203491', '1039485'],
                 'feeds':   [],
                 'outputs': ['2901049'],
                 'linear index': 11},
     '2939400': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['2901049', '2949002'],
                 'feeds':   [],
                 'outputs': ['1039013'],
                 'linear index': 12},
     '2030624': {'inf rule': 'divide both sides by',
                 'inputs':  ['1039013'],
                 'feeds':   ['1304952'],
                 'outputs': ['4948325'],
                 'linear index': 13},
     '1039774': {'inf rule': 'replace scalar with vector',
                 'inputs':  ['4948325'],
                 'feeds':   [],
                 'outputs': ['2948487'],
                 'linear index': 14},
     '1923945': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['3940505'],
                 'linear index': 15},
     '2938341': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['3940505', '2948487'],
                 'feeds':   [],
                 'outputs': ['2100421'],
                 'linear index': 16},
     '1203100': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['2100421', '4499582'],
                 'feeds':   [],
                 'outputs': ['1291313'],
                 'linear index': 17},
     '1341141': {'inf rule': 'simplify',
                 'inputs':  ['1291313'],
                 'feeds':   [],
                 'outputs': ['1305534'],
                 'linear index': 18},
     '1204929': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['1039948'],
                 'linear index': 19},
     '1395335': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['1353583'],
                 'linear index': 20},
     '2422434': {'inf rule': 'raise both sides to power',
                 'inputs':  ['1039948'],
                 'feeds':   ['2239424'],
                 'outputs': ['1432042'],
                 'linear index': 21},
     '2322434': {'inf rule': 'mult RHS by unity',
                 'inputs':  ['1353583'],
                 'feeds':   ['2342425'],
                 'outputs': ['2326309'],
                 'linear index': 22},
     '2449858': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['1432042', '2326309'],
                 'feeds':   [],
                 'outputs': ['3576787'],
                 'linear index': 23},
     '1347587': {'inf rule': 'partially differentiate with respect to',
                 'inputs':  ['1305534'],
                 'feeds':   ['6544644'],
                 'outputs': ['2364546'],
                 'linear index': 24},
     '2464445': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['2364546', '1305534'],
                 'feeds':   [],
                 'outputs': ['5345567'],
                 'linear index': 25},
     '3454353': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['3576787', '5345567'],
                 'feeds':   [],
                 'outputs': ['2495835'],
                 'linear index': 26},
     '4358635': {'inf rule': 'multiply both sides by',
                 'inputs':  ['2495835'],
                 'feeds':   ['2436656'],
                 'outputs': ['3429538'],
                 'linear index': 27},
     '2454535': {'inf rule': 'apply gradient to scalar function',
                 'inputs':  ['1305534'],
                 'feeds':   [],
                 'outputs': ['5577584'],
                 'linear index': 28},
     '5858694': {'inf rule': 'simplify',
                 'inputs':  ['5577584'],
                 'feeds':   [],
                 'outputs': ['3454565'],
                 'linear index': 29},
     '5354635': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['3454565', '1305534'],
                 'feeds':   [],
                 'outputs': ['5535257'],
                 'linear index': 30},
     '3294932': {'inf rule': 'apply divergence',
                 'inputs':  ['5535257'],
                 'feeds':   [],
                 'outputs': ['4938589'],
                 'linear index': 31},
     '2394495': {'inf rule': 'simplify',
                 'inputs':  ['4938589'],
                 'feeds':   [],
                 'outputs': ['1495034'],
                 'linear index': 32},
     '4059592': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['5535257', '1495034'],
                 'feeds':   [],
                 'outputs': ['1049553'],
                 'linear index': 33},
     '4305953': {'inf rule': 'simplify',
                 'inputs':  ['1049553'],
                 'feeds':   [],
                 'outputs': ['4959593'],
                 'linear index': 34},
     '4939459': {'inf rule': 'multiply both sides by',
                 'inputs':  ['4959593'],
                 'feeds':   ['5938585'],
                 'outputs': ['4349493'],
                 'linear index': 35},
     '9394834': {'inf rule': 'LHS of expr X eq LHS of expr Y',
                 'inputs':  ['3429538', '4349493'],
                 'feeds':   [],
                 'outputs': ['1304924'],
                 'linear index': 36},
     '2455452': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['2344324'],
                 'linear index': 37},
     '2954835': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['2344324', '1304924'],
                 'feeds':   [],
                 'outputs': ['2456546'],
                 'linear index': 38},
     '6756574': {'inf rule': 'declare final expr',
                 'inputs':  ['2456546'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 39},
      },
  'quantum basics orthogonality': {
     '2455366': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['3849595'],
                 'linear index': 1},
     '3848591': {'inf rule': 'apply operator to ket',
                 'inputs':  ['3849595'],
                 'feeds':   [],
                 'outputs': ['4940359'],
                 'linear index': 2},
     '1301442': {'inf rule': 'apply operator to bra',
                 'inputs':  ['3849595'],
                 'feeds':   [],
                 'outputs': ['4349300'],
                 'linear index': 3},
     '2304934': {'inf rule': 'simplify',
                 'inputs':  ['4940359'],
                 'feeds':   [],
                 'outputs': ['2409402'],
                 'linear index': 4},
     '4938400': {'inf rule': 'simplify',
                 'inputs':  ['4349300'],
                 'feeds':   [],
                 'outputs': ['4934893'],
                 'linear index': 5},
     '9878900': {'inf rule': 'LHS of expr X eq LHS of expr Y',
                 'inputs':  ['2409402', '4934893'],
                 'feeds':   [],
                 'outputs': ['3495045'],
                 'linear index': 6},
     '4838499': {'inf rule': 'subtract X from both sides',
                 'inputs':  ['3495045'],
                 'feeds':   ['5395034'],
                 'outputs': ['4939583'],
                 'linear index': 7},
     '9888730': {'inf rule': 'combine like terms',
                 'inputs':  ['4939583'],
                 'feeds':   [],
                 'outputs': ['3494855'],
                 'linear index': 8},
     '2384852': {'inf rule': 'declare final expr',
                 'inputs':  ['3494855'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 9},
      },
  'quantum basics Hermitian operators have realvalued observables': {
     '3403595': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['3402919'],
                 'linear index': 1},
     '9538385': {'inf rule': 'conjugate transpose both sides',
                 'inputs':  ['3402919'],
                 'feeds':   [],
                 'outputs': ['2495954'],
                 'linear index': 2},
     '2394942': {'inf rule': 'distribute conjugate transpose to factors',
                 'inputs':  ['2495954'],
                 'feeds':   [],
                 'outputs': ['2390094'],
                 'linear index': 3},
     '1294984': {'inf rule': 'declare assumption',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['2484892'],
                 'linear index': 4},
     '2485909': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['2484892', '2390094'],
                 'feeds':   [],
                 'outputs': ['2494040'],
                 'linear index': 5},
     '2490098': {'inf rule': 'sub RHS of expr X into expr Y',
                 'inputs':  ['2494040', '3402919'],
                 'feeds':   [],
                 'outputs': ['4930585'],
                 'linear index': 6},
     '2939493': {'inf rule': 'declare final expr',
                 'inputs':  ['4930585'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 7},
      },
  'variance relation': {
     '2004989': {'inf rule': 'declare identity',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['3493498'],
                 'linear index': 1},
     '2349059': {'inf rule': 'simplify',
                 'inputs':  ['3493498'],
                 'feeds':   [],
                 'outputs': ['5049530'],
                 'linear index': 2},
     '2390498': {'inf rule': 'simplify',
                 'inputs':  ['5049530'],
                 'feeds':   [],
                 'outputs': ['6757584'],
                 'linear index': 3},
     '3848494': {'inf rule': 'simplify',
                 'inputs':  ['6757584'],
                 'feeds':   [],
                 'outputs': ['3294824'],
                 'linear index': 4},
     '4948384': {'inf rule': 'simplify',
                 'inputs':  ['3294824'],
                 'feeds':   [],
                 'outputs': ['5949484'],
                 'linear index': 5},
     '4948955': {'inf rule': 'claim LHS equals RHS',
                 'inputs':  ['5949484'],
                 'feeds':   [],
                 'outputs': [],
                 'linear index': 6},
      },
  'Comptons equation for scattering': {
     '8668018': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['4978059'],
                 'linear index': 1},
     '3445641': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['2840008'],
                 'linear index': 2},
     '4733986': {'inf rule': 'declare initial expr',
                 'inputs':  [],
                 'feeds':   [],
                 'outputs': ['1209604'],
                 'linear index': 3},
     '7958085': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['2840008', '4978059'],
                 'feeds':   [],
                 'outputs': ['2491904'],
                 'linear index': 4},
     '3667395': {'inf rule': 'sub LHS of expr X into expr Y',
                 'inputs':  ['2491904', '1209604'],
                 'feeds':   [],
                 'outputs': ['5610925'],
                 'linear index': 5},
     '7952658': {'inf rule': 'subtract X from both sides',
                 'inputs':  ['5610925'],
                 'feeds':   ['2338514'],
                 'outputs': ['4068150'],
                 'linear index': 6},
     '3871228': {'inf rule': 'swap LHS with RHS',
                 'inputs':  ['4068150'],
                 'feeds':   [],
                 'outputs': ['4200334'],
                 'linear index': 7},
     '4738354': {'inf rule': 'mult expr X by expr Y',
                 'inputs':  ['4200334', '4200334'], # TODO: this has a problem -- two inputs are needed, only one is provided
                 'feeds':   [],
                 'outputs': ['4218805'],
                 'linear index': 8},
    }
  }
# the "expr local ID" should be in a separate lookup table with the "expr global ID"
dat['expr local to global'] = {
# imported feeds from v3
        '5938585': '0005938585',
        '5395034': '0005395034',
        '5749291': '0005749291',
        '8837284': '0008837284',
        '2424922': '0002424922',
        '6644853': '0006644853',
        '4307451': '0004307451',
        '4858592': '0004858592',
        '2367209': '0002367209',
        '2838490': '0002838490',
        '2449291': '0002449291',
        '7636749': '0007636749',
        '7563791': '0007563791',
        '9877781': '0009877781',
        '3954314': '0003954314',
        '4264724': '0004264724',
        '6563727': '0006563727',
        '6656532': '0006656532',
        '4582412': '0004582412',
        '4089571': '0004089571',
        '7894942': '0007894942',
        '1111111': '0001111111',
        '6466214': '0006466214',
        '7471778': '0007471778',
        '8842811': '0008842811',
        '3838111': '0003838111',
        '1334112': '0001334112',
        '9587738': '0009587738',
        '9458842': '0009458842',
        '4934845': '0004934845',
        '9484724': '0009484724',
        '0040490': '0000040490',
        '4831494': '0004831494',
        '9485858': '0009485858',
        '4948585': '0004948585',
        '2929944': '0002929944',
        '9485857': '0009485857',
        '9594995': '0009594995',
        '5626421': '0005626421',
        '3232242': '0003232242',
        '2393922': '0002393922',
        '3949052': '0003949052',
        '3413423': '0003413423',
        '4849392': '0004849392',
        '1030901': '0001030901',
        '2919191': '0002919191',
        '3919391': '0003919391',
        '3981813': '0003981813',
        '4829194': '0004829194',
        '3747849': '0003747849',
        '1921933': '0001921933',
        '9492929': '0009492929',
        '2940021': '0002940021',
        '3949921': '0003949921',
        '1209482': '0001209482',
        '1304952': '0001304952',
        '2239424': '0002239424',
        '2342425': '0002342425',
        '6544644': '0006544644',
        '2436656': '0002436656',
        '0999900': '0000999900',
        '2338514': '0002338514',
# imported expressions from v3
# frequency relations
        '3294004': '0404050504',
        '3993940': '1293923844',
        '9214650': '3131211131',
        '8341200': '2131616531',
        '8482459': '3131111133',
        '2934848': '3121513111',
        '8374556': '3132131132',
        '3293094': '5900595848',
        '8394853': '0934990943',
        '9380032': '2113211456',
# quadratic equation derivation
        '6608123': '5982958249',
        '1239010': '5928285821',
        '8811221': '9999999968',
        '7777621': '5958392859',
        '8882098': '9285928292',
        '9091270': '8582954722',
        '4433112': '9582958293',
        '1734000': '5959282914',
        '1212129': '5938459282',
        '8761200': '9999999969',
        '1120000': '5928292841',
        '6608102': '9582958294',
        '2657355': '5982958248',
        '2985412': '9385938295',
# euler equation proof
        '8883737': '9482113948',
        '1029383': '9492920340',
        '3784785': '4923339482',
        '3747585': '4928239482',
        '2948271': '9482984922',
        '1111289': '9848292229',
        '9587572': '9482923849',
        '9984877': '9482943948',
        '8888888': '4938429483',
        '9038289': '9848294829',
        '1838300': '9429829482',
# euler equation trig sqrt
        '7472641': '1248277773',
        '3333333': '4638429483',
        '2936550': '9482438243',
        '1029911': '7572664728',
        '1231131': '9988949211',
        '9999999': '4838429483',
        '9385720': '5832984291',
        '7472666': '9889984281',
        '9481000': '4827492911',
        '8888888': '4938429483',
        '5828294': '9482928242',
        '4890284': '9482928243',
        '9123670': '3285732911',
        '2222222': '9483928192',
        '4444444': '4598294821',
# example of Godel problem
        '7572712': '9829420421',
        '4738297': '2948293829',
        '4627482': '9482948292',
        '2845892': '4828238421',
# particle in a 1D box
        '2838288': '8575748999',
        '9495882': '1858772113',
        '1029384': '8485867742',
        '8474762': '8485757728',
        '8584733': '1202312210',
        '3992939': '0948572140',
        '0405049': '0439492440',
        '8474765': '9393939992',
        '0203020': '1202310110',
        '7562671': '9059289981',
        '8577672': '1020010291',
        '1214762': '8484544728',
        '0021030': '5857434758',
        '4948377': '7564894985',
        '0495950': '0203024440',
        '9339495': '8575746378',
        '3452132': '8849289982',
        '8577711': '1857710291',
        '7575626': '1934748140',
        '0495054': '9858028950',
        '0595847': '4857472413',
        '0100404': '7575738420',
        '7572118': '8582885111',
        '8585727': '9495857278',
        '8474766': '9393939991',
        '1231131': '9988949211',
        '9394858': '9485747246',
        '9493949': '4857475848',
        '8577781': '9585727710',
        '8478550': '8889444440',
        '3452131': '2944838499',
        '5577567': '8572657110',
        '9394857': '9485747245',
        '9847600': '1010923823',
        '7547581': '8577275751',
        '7572859': '1293913110',
        '7572748': '5727578862',
        '9485800': '8576785890',
# maxwell to electric field wave equation
        '4758592': '8494839423',
        '4757562': '9991999979',
        '3738373': '1636453295',
        '1199299': '1314864131',
        '2392932': '9291999979',
        '3984852': '9919999981',
        '1939485': '7575859295',
        '4642245': '1314464131',
        '2837471': '7466829492',
        '4857731': '9999999981',
        '2962831': '3947269979',
# electric field wave equation time dependent to time independent
        '2939392': '4985825552',
        '4758592': '8494839423',
        '3949492': '3485475729',
        '9393848': '8572852424',
        '1029393': '2029293929',
        '3839493': '9394939493',
        '9495903': '9485384858',
        '4949582': '4585828572',
        '4958573': '1858578388',
        '3994928': '9499428242',
# euler equation trig relations
        '3194924': '2123139121',
        '2939484': '4742644828',
        '8888883': '4938429484',
        '4825483': '3942849294',
        '8888881': '2394853829',
        '4383592': '3829492824',
        '4849959': '2103023049',
        '8888882': '4938429482',
        '8888888': '4938429483',
        '4849888': '4585932229',
        '1133483': '4843995999',
# integration by parts
        '2938188': '8489593960',
        '3848329': '8489593964',
        '2938190': '8489593962',
        '3494854': '8489593958',
# curl curl identity
        '3948472': '7575859310',
        '2941319': '7575859302',
        '1939485': '7575859295',
        '3949292': '7575859306',
        '2109231': '7575859312',
        '2934842': '7575859304',
        '9485482': '7575859300',
        '3844221': '7575859308',
# derivation of Schrodinger Eq
        '3499522': '1020394902',
        '2901049': '3121234212',
        '5577584': '3948572230',
        '2344324': '1158485859',
        '4349493': '5868688585',
        '1039013': '9999999962',
        '3741728': '9999999965',
        '2948487': '9999998870',
        '2100421': '3948574226',
        '3940505': '3948574224',
        '3576787': '4298359851',
        '1495034': '1648958381',
        '2949821': '4147472132',
        '1353583': '4298359835',
        '1203491': '1020394900',
        '2939402': '3147472131',
        '2949002': '9999999960',
        '4499582': '9999999961',
        '1291313': '3948574228',
        '5345567': '3948571256',
        '2934848': '3121513111',
        '1039948': '1029039903',
        '1039485': '3121234211',
        '3454565': '4943571230',
        '4938589': '4394958389',
        '4948325': '9999999870',
        '4959593': '2395958385',
        '1305534': '3948574230',
        '2364546': '3948574233',
        '1304924': '9958485859',
        '5577584': '3948574230',
        '1432042': '1029039904',
        '3429538': '4341171256',
        '2326309': '4298359845',
        '2456546': '2258485859',
        '2495835': '4348571256',
        '5535257': '5985371230',
        '1049553': '2648958382',
# quantum basics orthogonality
        '4939583': '3924948349',
        '3495045': '1203938249',
        '4349300': '1395858355',
        '4940359': '1010393944',
        '3494855': '2394935831',
        '2409402': '2394240499',
        '4934893': '3943939590',
        '3849595': '9596004948',
# quantum basics Hermitian operators have realvalued observables
        '2494040': '4948934890',
        '2495954': '2394935835',
        '3402919': '9999999975',
        '4930585': '2848934890',
        '2390094': '1010393913',
        '2484892': '9294858532',
# variance relation
        '3294824': '4949359835',
        '5949484': '2494533900',
        '3493498': '3585845894',
        '5049530': '8399484849',
        '6757584': '2404934990',
# Comptons equation for scattering
        '2840008': '8257621077',
        '4068150': '5530148480',
        '4200334': '7917051060',
        '5610925': '8139187332',
        '1209604': '8311458118',
        '4218805': '6742123016',
        '2491904': '3951205425',
        '4978059': '1638282134',
# fun deriv
        '9428000': '4928923942',
        '3190000': '9494829190',
        '3921000': '9499959299',
# 'another deriv'
        '9128000': '1492842000'}



# see also v3_CSV/databases/symbols_database.csv
# this is a combination of constants and variables
# constants include values
# additional constraints: what range? What base?
# in alphabetic order
dat['symbols'] = {
  '9139': {'latex': 'a',            'category': 'variable', 'scope': ['real', 'complex']},
  '1370': {'latex': '\\alpha',       'category': 'constant', 'scope': ['real'], 'name': 'fine-structure constant',
                          'values': [{'value': '1/137.03599999', 'units': 'dimensionless'}],
                          'references': ['https://en.wikipedia.org/wiki/Fine-structure_constant']},
  '1939': {'latex': 'b',            'category': 'variable', 'scope': ['real', 'complex']},
  '4231': {'latex': 'c',            'category': 'variable', 'scope': ['real', 'complex']},
  '4567': {'latex': 'c',            'category': 'constant', 'scope': ['real'], 'name': 'speed of light in vacuum',
                          'values': [{'value': '299792458','units':'meters/second'}],
                          'references': ['https://en.wikipedia.org/wiki/Speed_of_light']},
  '1900': {'latex': 'd',            'category': 'variable', 'scope': ['real', 'complex']},
  '9199': {'latex': 'dx',           'category': 'variable', 'scope': ['real']},
  '1939': {'latex': 'e',            'category': 'variable', 'scope': ['real', 'complex']},
  '1999': {'latex': 'e',            'category': 'constant', 'scope': ['real'], 'name': 'charge of an electron',
                          'values': [{'value': '1.602*10^{-19}', 'units':'Columb'}],
                          'references': ['https://en.wikipedia.org/wiki/Elementary_charge']},
  '2912': {'latex': '\\exp',         'category': 'constant', 'scope': ['real'], 'name': 'e',
                          'values': [{'value': '2.718', 'units': 'dimensionless'}]},
  '4200': {'latex': 'f',            'category': 'variable', 'scope': ['real', 'complex']},
  '4291': {'latex': 'g',            'category': 'variable', 'scope': ['real', 'complex']},
  '2456': {'latex': 'h',            'category': 'variable', 'scope': ['real', 'complex']},
  '4621': {'latex': 'i',            'category': 'variable', 'scope': ['real', 'complex']},
  '1567': {'latex': 'i',            'category': 'variable', 'scope': ['real', 'complex']},
  '1552': {'latex': 'j',            'category': 'variable', 'scope': ['real', 'complex']},
  '5321': {'latex': 'k',            'category': 'variable', 'scope': ['real', 'complex']},
  '1157': {'latex': 'k_{Boltzman}', 'category': 'constant', 'scope': ['real'], 'name': 'Boltzman constant',
                          'values': [{'value': '1.38064852*10^{-23}', 'units': 'meter^2 kilogram second^-2 Kelvin^-1'}],
                          'references': ['https://en.wikipedia.org/wiki/Boltzmann_constant']},
  '1345': {'latex': 'l',            'category': 'variable', 'scope': ['real', 'complex']},
  '5155': {'latex': 'm',            'category': 'variable', 'scope': ['real', 'complex']},
  '4563': {'latex': 'n',            'category': 'variable', 'scope': ['real', 'complex']},
  '6022': {'latex': 'N_A',          'category': 'constant', 'scope': ['real'], 'name': "Avagadro's constant",
                          'values': [{'value': '6.02214086*10^{23}', 'units': 'mol^-1'}],
                          'references': ['https://en.wikipedia.org/wiki/Avogadro_constant']},
  '2467': {'latex': 'o',            'category': 'variable', 'scope': ['real', 'complex']},
  '1131': {'latex': 'p',            'category': 'variable', 'scope': ['real', 'complex']},
  '1134': {'latex': 'p',            'category': 'variable', 'scope': ['real'], 'name': 'momentum', 'measure': 'mass*length/time'},
  '3141': {'latex': '\\pi',          'category': 'constant', 'scope': ['real'], 'name': 'pi',
                          'values': [{'value': '3.1415', 'units': 'dimensionless'}]},
  '1223': {'latex': 'q',            'category': 'variable', 'scope': ['real', 'complex']},
  '9492': {'latex': 'r',            'category': 'variable', 'scope': ['real', 'complex']},
  '5791': {'latex': 's',            'category': 'variable', 'scope': ['real', 'complex']},
  '1456': {'latex': 't',            'category': 'variable', 'scope': ['real', 'complex']},
  '9491': {'latex': 'T',            'category': 'variable', 'scope': ['real'], 'name': 'period',       'measure': 'time'},
  '1467': {'latex': 't',            'category': 'variable', 'scope': ['real'], 'name': 'time',         'measure': 'time'},
  '4568': {'latex': 't_0',          'category': 'variable', 'scope': ['real'], 'name': 'time 0',       'measure': 'time'},
  '5563': {'latex': 't_i',          'category': 'variable', 'scope': ['real'], 'name': 'initial time', 'measure': 'time'},
  '2467': {'latex': 't_f',          'category': 'variable', 'scope': ['real'], 'name': 'final time',   'measure': 'time'},
  '4221': {'latex': 'u',            'category': 'variable', 'scope': ['real', 'complex']},
  '1357': {'latex': 'v',            'category': 'variable', 'scope': ['real', 'complex']},
  '1245': {'latex': 'v',            'category': 'variable', 'scope': ['real', 'complex']},
  '1464': {'latex': 'x',            'category': 'variable', 'scope': ['real', 'complex']},
  '1572': {'latex': 'x_0',          'category': 'variable', 'scope': ['real'], 'name': 'initial position', 'measure': 'length'},
  '2911': {'latex': '\\vec{x}',      'categ ry': 'variable', 'scope': ['vector']},
  '1452': {'latex': 'y',            'category': 'variable', 'scope': ['real', 'complex']},
  '1469': {'latex': 'y_0',          'category': 'variable', 'scope': ['real'], 'name': 'initial position', 'measure': 'length'},
  '0011': {'latex': 'z',            'category': 'variable', 'scope': ['real', 'complex']}
#  '': {'latex': '',            'category': 'variable', 'scope': ['real', 'complex']},
}

# https://en.wikipedia.org/wiki/Measurement

dat['measures'] = {
  'length': {'references': ['https://en.wikipedia.org/wiki/Unit_of_length']},
  'mass': {},
  'time': {},
  'luminous intensity': {},
  'temperature': {},
  'electric current': {},
  'amount of substance': {}
}

# see also v3_CSV/databases/symbols_database.csv
dat['units'] = {
# https://en.wikipedia.org/wiki/SI_base_unit
# https://www.adducation.info/how-to-improve-your-knowledge/units-of-measurement/i
  'meter':      {'measure': 'length', 'references': ['https://en.wikipedia.org/wiki/Metre']},
  'second':     {'measure': 'time', 'references': ['https://en.wikipedia.org/wiki/Second']},
  'Kelvin':     {'measure': 'temperature', 'references': ['https://en.wikipedia.org/wiki/Kelvin']},
  'kilogram':   {'measure': 'mass', 'references': ['https://en.wikipedia.org/wiki/Kilogram']},
  'mol':        {'measure': 'amount of substance', 'references': ['https://en.wikipedia.org/wiki/Mole_(unit)']},
  'Ampere':     {'measure': 'electric current', 'references': ['https://en.wikipedia.org/wiki/Ampere']},
# common units
  'Farad':      {'measure': 'capacitance', 'references': ['https://en.wikipedia.org/wiki/Farad']},
  'Tesla':      {'measure': 'magnetic field', 'references': ['https://en.wikipedia.org/wiki/Tesla_(unit)']},
# https://en.wikipedia.org/wiki/List_of_unusual_units_of_measurement
  'hand':       {'measure': 'length', 'references': ['https://en.wikipedia.org/wiki/Hand_(unit)']},
  'light-year': {'measure': 'length', 'references': ['https://en.wikipedia.org/wiki/Light-year']},
  'parsec':     {'measure': 'length', 'references': ['https://en.wikipedia.org/wiki/Parsec']},
  'sol':        {'measure': 'time', 'references': ['https://en.wikipedia.org/wiki/Sol_(day_on_Mars)']}
}

# see also v3_CSV/databases/symbols_database.csv
# https://github.com/allofphysicsgraph/proofofconcept/wiki/Operators
dat['operators'] = {
  'equals':                      {'latex': '=',            'argument count': 2, 'scope': ['real','vector','matrix','complex']},
  'addition':                    {'latex': '+',            'argument count': 2, 'scope': ['real','vector','matrix','complex']},
  'subtraction':                 {'latex': '-',            'argument count': 2, 'scope': ['real','vector','matrix','complex']},
  'multiplication':              {'latex': '*',            'argument count': 2, 'scope': ['real','vector','matrix','complex']},
  'division':                    {'latex': '/',            'argument count': 2, 'scope': ['real','vector','matrix','complex']},
  'cosine':                      {'latex': '\\cos',         'argument count': 1, 'scope': ['real']},
  'nabla':                       {'latex': '\\nabla',       'argument count': 1, 'scope': ['vector']},
  'function':                    {'latex': 'f',            'argument count': 1, 'scope': ['list']},
  'sine':                        {'latex': '\sin',         'argument count': 1, 'scope': ['real']},
  'dot product':                 {'latex': '\dot',         'argument count': 2, 'scope': ['vector']},
  'cross product':               {'latex': '\cross',       'argument count': 2, 'scope': ['vector']},
  'element-wise addition':       {'latex': '+',            'argument count': 2, 'scope': ['vector', 'matrix']},
  'indefinite intergral':        {'latex': '\int',         'argument count': 2, 'scope': ['real','vector','matrix','complex']},
  'definite integral':           {'latex': '\int',         'argument count': 4, 'scope': ['real','vector','matrix','complex']},
  'summation':                   {'latex': '\sum',         'argument count': 4, 'scope': ['real','vector','matrix','complex']},
  'spatial vector differential': {'latex': '\\vec{\\nabla}', 'argument count': 2, 'scope': ['real']}
}


#with open('data.pkl','wb') as f:
#    pickle.dump(dat, f)

with open('data.json', 'w') as outfile:
    json.dump(dat, outfile, indent=4, separators=(',', ': '), sort_keys=True)

# EOF



20151107

# nothing up my sleeve - clean the destination directories
bin/clean_dev.sh
cp site/d3/d3.v3.min.js dev/site/
rm -rf output/
mkdir output

# user input
bin/interactive_user_prompt.py 
mv dev/output/new_*.csv dev/
# or recycle existing
cp new_*.csv dev/
cp derivation_name.dat dev/output/

# set variables to pass to scripts
deriv_name_with_spaces=`cat dev/output/derivation_name.dat`
deriv_name_without_spaces=`cat dev/output/derivation_name.dat | sed 's/ /_/g'`

# create infrastructure
bin/create_picture_per_expression_from_expressionDB.py 
bin/create_picture_per_feed_from_feedDB.py 
bin/create_picture_per_derivation_from_connectionsDB.py "${deriv_name_with_spaces}"
bin/create_json_per_derivation_from_connectionsDB.py "${deriv_name_with_spaces}"
bin/create_d3js_html_per_derivation_for_local.sh dev/site/ json/ pictures/ ${deriv_name_without_spaces} local

# place results in appropriate directories for visualization
cp dev/output/*.json dev/site/json/
cp dev/output/*.png dev/site/pictures/
cp dev/images_expression_png/*.png dev/site/pictures/images_expression_png/
cp dev/images_feed_png/*.png dev/site/pictures/images_feed_png/
cp lib/images_infrule_png/*.png dev/site/pictures/images_infrule_png/

# visualize the results
open /Applications/Google\ Chrome.app --args --allow-file-access-from-files file:///Users/benpayne/version_controlled/proofofconcept/dev/site/${deriv_name_without_spaces}.html

20151105

now that I'm doing rapid prototyping, I need a development environment which is 
sparate from the projection environment.
--> added /dev/


bin/interactive_user_prompt.py 
mv dev/output/new_*.csv dev/
bin/create_picture_per_expression_from_expressionDB.py 
bin/create_picture_per_feed_from_feedDB.py 
bin/create_picture_per_derivation_from_connectionsDB.py 
bin/create_json_per_derivation_from_connectionsDB.py
bin/create_d3js_html_per_derivation.sh dev/output new_derivation_eipiplusone
cp dev/output/new_derivation_eipiplusone.html site/testing/
cp dev/output/*.json site/json/
cp dev/output/*.png site/pictures/


20151104

bin/interactive_user_prompt.py 
mv eipiplusone/output/new_* eipiplusone/
bin/create_picture_per_expression_from_expressionDB.py 
bin/create_picture_per_feed_from_feedDB.py 
bin/create_picture_per_derivation_from_connectionsDB.py 
open eipiplusone/output/new_derivation_with_labels.png 
open eipiplusone/output/new_derivation_without_labels.png 
bin/create_json_per_derivation_from_connectionsDB.py
bin/create_d3js_html_per_derivation.sh output new_derivation
cp output/new_derivation.html site/
cp eipiplusone/output/*.json site/json/
cp eipiplusone/output/*.png site/pictures/

20151102

cleaned up lots of inconsistencies

todo:
* create nodes and edges csv file is not yet working as desired
* end-to-end test of enter derivation to create json needs to be demonstrated
* link overview graph to each derivation

See also https://trello.com/b/kSZvdVg5/physics-derivation-graph

20150908

Physics derivation graph is hierarchical 

Symbol, operators 
Expressions, inference rules 
Step 
Derivation
Physics dervation graph 

20150806

I recognized that derivations are distinct from identities and definitions.
What confused me is that validation of an identity is a derivation.

F=m*a is not an identiy
Euler equation is an identity. 

http://www.purplemath.com/modules/proving.htm
identity: only manipulate one side of the equation, whereas in a derivation both sides are manipulated

set of identities:
https://en.wikipedia.org/wiki/Proofs_of_trigonometric_identities

20150618

contacted jibe, jon seaton, and wojech

https://www.physicsforums.com/threads/physics-equation-map.4269/

20150519

Now I have two tasks:

* non-overlapping node labels, a la 
    http://bl.ocks.org/MoritzStefaner/1377729
* hierarchical graph -- interactive via URLs
    http://stackoverflow.com/questions/20575026/how-to-make-labels-and-nodes-in-d3-forced-layout-clickable-to-navigate-to-a-url?lq=1
    http://stackoverflow.com/questions/13104681/hyperlinks-in-d3-js-objects

Both are presentation issues. I think the hierarchical graph is more important as it is the "zoom" 

20150515

got quadratic equation in d3js!
Visualization needs non-overlapping labels, see
http://bl.ocks.org/MoritzStefaner/1377729

20150513

The translation from the static .xml based graphs to .json for d3js is not a simple regex.
The .json needs to include the picture dimensions. 

My next task is to parse edges based JSON input rather than relying on the data structure native to d3js

  {source: nodes[0], target: nodes[1]},
  {source: nodes[1], target: nodes[2]},

See https://github.com/mbostock/d3/wiki/Force-Layout
"these attributes may be specified as a numeric index rather than a direct link, such that the nodes and links can be read-in from a JSON file"
...
"The source and target attributes on incoming links are only replaced with the corresponding entries in nodes if these attributes are numbers"

http://bl.ocks.org/mbostock/4062045

20150305

I created a project on webprotege for the physics derivation graph
http://webprotege.stanford.edu/#Edit:projectId=c816e793-12eb-4bfd-a4c7-3db0ba44b34c

The project is populated with data from
https://github.com/allofphysicsgraph/proofofconcept/wiki/Inference-Rules
and
https://github.com/allofphysicsgraph/proofofconcept/wiki/Operators

I then exported the data from webprotege as "OWL/XML" and got a ".owx" file
http://bhpayne.github.io/physics_derivation_graph/physics_derivation_graph.owx

I can plot the graph in
http://vowl.visualdataweb.org/webvowl/index.html#iri=http://bhpayne.github.io/physics_derivation_graph/physics_derivation_graph.owx

That same file input doesn't work on my instance
http://bhpayne.github.io/physics_derivation_graph/webvowl_0.3.3/index.html?#iri=http://bhpayne.github.io/physics_derivation_graph/physics_derivation_graph.owx

My next step is to determine how what I've done so far (developing
structure) relates to putting content into OWL. The content is
mathematical, so the format will likely be MathML.


20150304

Started a page for myself on
https://bhpayne.github.io/

Good news: github.io supports HTML5
https://haxiomic.github.io/GPU-Fluid-Experiments/html5/?q=Medium


20150304

Seems like the main hurdle will be converting XML to the RDF triple paradigm.

(expression) (is composed of) (operators)
(operators) (are) (symbols or math)

Problem is that some inference rules take feeds, rather than simply relate one expression to another

      ----------------
      | expression 1 |
      ----------------
             |
             v
  --------------------------     --------
  \ multiply both sides by /--<--| feed |
   ------------------------      --------
               |
               v
       ----------------
       | expression 2 |
       ----------------

Perhaps the triplets are

(expression) (is composed of) ({left-hand-side, relation, right-hand-side})
(left-hand-side) (is composed of) (symbols and operators)
(right-hand-side) (is composed of) (symbols and operators)
(relation operators) (is one of) ({=,<,>,!=,<=,>=})
(expression) (is acted upon by) (inference rule)
(inference rule) (takes) (feed)
(inference rule) (yields) (expression)


********************

Google search for
rdf physics derivation
yields no relevant results

The first return for
rdf physics equation
is
http://stackoverflow.com/questions/27860142/writing-scientific-hypothesis-in-rdf
It appears to be our friend jibe-b
http://stackoverflow.com/users/4087192/jeybee


*******************

Looking at the source code for the page
http://vowl.visualdataweb.org/webvowl/index.html#iri=http://jibe-b.github.io/ontology/physics-derivations-test
I am a bit confused -- I don't see where the graph is being loaded from.


******************

learning RDF

Good:
http://www.linkeddatatools.com/introducing-rdf
http://www.linkeddatatools.com/introducing-rdf-part-2

OK
http://www.w3schools.com/webservices/ws_rdf_example.asp

Out of date
http://www.rdfdata.org/

************************

http://protege.stanford.edu/
http://webprotege.stanford.edu/


20141207

what's the elevator pitch?

compile a database of all current known physics 
showing how they correlate
the logic behind that correlation
showing how they are derived

examples of capturing lots of information concisely in an accessible form
* google maps
* wikipedia

20141207

syntax candidates: {ContentML, PresentationML, Latex, Mathematica, SymPy, abstract syntax tree}

In general, we need to evaluate
* ability to input
* ability to transform between representations
* ability to audit correctness
Not a problem:
* storage
consumer cares about:
* speed
* ease of use
* presentation
* accessibility - multi-device, multi-OS
* easy setup

A set of test cases for flexing the capability of syntax

1) polynomial
Latex: a x^2 + b x + c = 0

2) Stoke's theorem
\int \int_{\sum} \vec{\nabla} \times \vec{F} \dot d\sum = \oint_{\partial \sum} \vec{F}\dot d\vec{r}

3) Tensor analysis
Y^i(X_j) = \Delta^i_{\ j}
Einstein notation: contravariant = superscript, covariant = subscript

4) creation operator
\hat{a}^+ |n\rangle = \sqrt{n+1} |n+1\rangle

\sigma_x \sigma_p \geq \frac{\hbar}{2}
uncertainty principle

To evaluate: 
* character count
* rendering

Content MathML for 1:

<math xmlns="http://www.w3.org/1998/Math/MathML">
<apply>
  <eq/>
    <apply>
      <plus/>
        <apply><ci>a</ci> <power/><ci> x </ci><ci> 2 </ci></apply>
        <apply><ci>b</ci> <ci> x </ci>                    </apply>
        <apply><ci>c</ci>                                 </apply>
    </apply>
    <apply>
      <cn>0</cn>
    </apply>
</apply>
</math>

Presentation MathML for 1:

<mrow>
 <mrow>
  <msup>
   <mrow><mi> x </mi></mrow>
   <mrow><mi> n </mi></mrow>
  </msup>
  <mo>+</mo>
  <msup>
   <mrow><mi> y </mi></mrow>
   <mrow><mi> n </mi></mrow>
  </msup>
 </mrow>
 <mo>=</mo>
 <msup>
  <mrow><mi> z </mi></mrow>
  <mrow><mi> n </mi></mrow>
 </msup>
</mrow>

* what are we comparing?
** presentation mathml, content mathml, mathematica, latex, abstract syntax tree
* what is the evaluation?
** can it describe all the notation necessary for physics
** how easy is the input method? (character count)
** can it be transformed to other representations


20141206

Statement stored as abstract syntax tree could generate MathML, Latex, CAS input
Mathematica has "tree form"

What I refer to as "statement", Mathematica calls "expressions"

Mathematica has "atomq" which indicates whether the expression
atom = {symbols, numbers, ...}

20141027

Mike found the basis for my inference rules

http://hotmath.com/hotmath_help/topics/properties-of-equality.html

"add X to both sides" = Addition Property
"multiply both sides by" = Multiplication Property
"substitute X for Y" = Substitution Property
"replace left side of equation 1 with left side of equation 2" =
Transitive Property

Knowing the right jargon makes all the difference!

http://www.mathwords.com/m/member_of_an_equation.htm

20141027

Famous physics equations
https://en.wikipedia.org/wiki/Wheeler%E2%80%93DeWitt_equation
https://en.wikipedia.org/wiki/Maxwell%27s_equations
https://en.wikipedia.org/wiki/Schr%C3%B6dinger_equation
https://en.wikipedia.org/wiki/Mass%E2%80%93energy_equivalence
https://en.wikipedia.org/wiki/Newton%27s_laws_of_motion
https://en.wikipedia.org/wiki/Kepler%27s_laws_of_planetary_motion
https://en.wikipedia.org/wiki/Newton%27s_law_of_universal_gravitation
https://en.wikipedia.org/wiki/Carnot%27s_theorem_(thermodynamics)
https://en.wikipedia.org/wiki/Ideal_gas_law
https://en.wikipedia.org/wiki/Bridgman%27s_thermodynamic_equations
https://en.wikipedia.org/wiki/Dirac_equation
https://en.wikipedia.org/wiki/Kirchhoff%27s_circuit_laws

Physics areas covered: Quantum, Classical, Astro, ElectroMagnetism, Thermodynamics, Relativity
These draw on algebra, calculus, differential equ, PDE, and linear algebra
It's not clear to me how
https://en.wikipedia.org/wiki/Einstein_notation
https://en.wikipedia.org/wiki/Bra%E2%80%93ket_notation
fit mathematically as syntax rules



20140930

I kept the iterative drafts associated with getting a "simple" derivation into the proper level of detail needed to put into the graph database. The initial problem fits on one page, but to get the steps explicit took 7 iterations and about 8 pages of repeated expansion. This measurement is biased by the fact I had to guess some of the inference rules, and ended up missing some (I needed to go back and further expand).

The result of this experiment is that the scope of the project is currently too grand. I have multiple distinct goals, each of which is non-trivial. Instead of trying to tackle all the problems at once, I'm going to prioritize tasks. 

Motivating goals (full scope)
* write down all math-physics knowledge
* perform derivations in atomic steps using common inference rules
* be able to check derivations using a CAS
* display graph of derivations
** interactive graph feature: add new content
** interactive graph feature: zoom in/out

The objective of being explicit about derivations allows for checking by a CAS.
Being explicit causes most of the work currently. 
My objective about having a pretty interface is useless without content.

Therefore, to both minimize workload and create content, I need to focus on just writing down the derivation relations.
--> don't bother about being explicit
--> don't bother with dynamic interface [static png is sufficient]
This resolves the difficulty of using Content MathML since I'm not going to use a CAS! Using Latex is sufficient at this time.

New task: gather derivations, determine how they are related (how to hop from one domain to another). 
--> how is Maxwell's equations related to E=mc^2?
--> how is E=mc^2 related to F=ma?
* http://www.mrelativity.net/relationshipef/the_relationship_between_e_and_f_p1.htm
* http://www.spaceandmotion.com/wave-equations-elastic-medium-space.htm
This one gives the best explanation:
* http://www.laserpablo.com/teacherresources/files/E-mc2_Derivation2.ppt

The summary is: "On the first pass, don't bother being rigerous; just collect information." 
In retrospect, this conclusion is obvious.

20140915
alternative to MathJax is released
https://news.ycombinator.com/item?id=8320439
http://khan.github.io/KaTeX/

I don't think this has significance for this project, because I don't expect to use in-browser rendering

20140907

Rendering graphs in browsers:

directly edit a directed graph with spring layout.
http://jsfiddle.net/vfu78/16/

directed graph editor with zoom; no spring layout
http://bl.ocks.org/cjrd/6863459

directed graph editor with spring layout; no zoom:
http://bl.ocks.org/rkirsling/5001347

20140907

Was able to convert presentation MathML to Latex using

http://sourceforge.net/projects/xsltml/

Instructions: 
Extract the .zip
place your .xml with PMathML in the same directory
place the following tags in your .xml file at the top:
<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="mmltex.xsl"?>

Open in Firefox to view the generated Latex

20140907

I found some examples of PMathML at the Digital Library of Mathematical Functions
http://dlmf.nist.gov/1.7
Example:
http://dlmf.nist.gov/1.7.E1.pmml

I downloaded this file and saved it as 
nist.xml
Opening in Firefox, this works as desired
rename the file nist.html
and Firefox doesn't render correctly.
Neither nist.xml nor nist.html render correctly in Chrome.

I added in the tags
<html><body> MathML here </body></html>
and also tried
<html><?xml version="1.0" encoding="UTF-8"?><body> MathML here </body></html>
<html><body><?xml version="1.0" encoding="UTF-8"?> MathML here </body></html>

but none of these three variations helped with rendering "nist.html" in Firefox.

Conclusions:
-file extension must be .xml
-does not render in Chrome
-works in Firefox

Firefox is happy with the file extension .xml and this tag ordering:

<?xml version="1.0" encoding="UTF-8"?><html><body> Presentation MathML here </body></html>


20140905

I've been researching the steps to take
Content MathML <--> Presentation MathML <--> Latex

Content MathML help:
http://cnx.org/contents/2bae0fb8-e5ea-48bd-b893-503033db6cfd@16

However, I realized the conversions I care about are
Content MathML --> CAS (i.e., sympy)
Content MathML --> graph rendering
Content MathML --> Latex for PDF

I suspect I will need
Content MathML --> Presentation MathML --> graph
               --> or mathjax          --> graph

MathJax
http://docs.mathjax.org/en/latest/mathml.html

I don't see any capability in Sympy to read in Content MathML. I would need to create a converter.


20140831

After talking with Mike G about this project, I realized having the Latex/SymPy representation separate was a cause for me being stuck. Whether I attacked the GUI, the CAS, or adding content to the database, there was a lack of unification between presentation (Latex) and symbolic manipulation (XML+SymPy). 

MathML seems a likely candidate for unifying presentation and symbolic manipulation. I need to learn more about it.

OpenMath is a more flexible version of MathML
http://www.openmath.org/overview/om-mml.html
I will need to find where MathML doesn't work prior to using OpenMath

http://tex.stackexchange.com/questions/57717/relationship-between-mathml-and-tex
http://www.access2science.com/latex/StaceyLatexNote.html
Latex is an input format (meant to be written by humans)
MathML is an output format (not meant to be written by humans)

Suppose I have the statements_database.xml in MathML. I would need to be more specific -- presentation or  

Render MathML online
http://www.compileonline.com/try_mathml_online.php

Latex to presentation MathML translator:
http://www.mathtowebonline.com/
http://www.mathmlcentral.com/Tools/ToMathML.jsp
http://www.mathtoweb.com/cgi-bin/mathtoweb_home.pl
http://math.etsu.edu/LaTeXMathML/
https://www.maths.nottingham.ac.uk/personal/drw/lm.html
http://dlmf.nist.gov/LaTeXML/
http://www.csun.edu/~hcmth008/mathml/acc_tutorial.html
http://www.orcca.on.ca/MathML/texmml/textomml.html

MathML to Tex translator:
http://www.orcca.on.ca/MathML/texmml/mmltotex.html


20140829

I have 3 potential tasks:
-graph visualization. Takes a lot of work
-implment CAS checker. Somewhat useless since {Latex, symbol definitions, SymPy} are not actually related
-add content to graph database. However, I want confidence that it is correct (CAS checker) and I want to visualize it.

Based on this analysis, I need a better desing of the database to relate Latex, symbol definitions, and SymPy statements.

I don't want to generate Latex from SymPy
--> MathML?

Latex is pretty, but too flexible to be reliably interpreted by a CAS

20140817

From talking with other projects which share overlap (Formula Database, Symbolab, EquationMap), the back-end databases might be similar. I think it would be worth having a common syntax. However, what motivation would private, commerical projects have for supporting shared syntax?
No one wants to supply me with their backend info, but I don't want to replicate previous work.
Equation map doesn't have a backend database. FD and Symbolab do. 

20140617

Asked an astrophysicist what the most important equations are in his field. Ended up talking about how the various fields are differentiated
-astronomy = observing the sky. Depends on atomic physics and optics
-astrophysics = how the stuff in the sky works. Depends on thermal physics + gravity
-cosmology = study of the whole universe
-space physics = travel in space
-planetary science = how does the planet work
-astrobiology = how do living creatures in extreme environments exist?

Astrophysics then depends on classical mechanics and radiative transfer. Find equilibrium for pressure, radiation, gravity. 
Famous equation: GR tensor (General Relativity tensor)

Good refernce textbook: Icko Iben, Stellar Evolution Physics

20140527

Called and spoke with Jon Seaton of Formula Database

His team has been working on formula-database for 2-3 years. He describes it as a "math search engine" which has a built-in equation editor. The search feature isn't just matching the Latex input. It understands dot product, cross product.

The objective is to allow students to search through literature. If you are a researcher, you might want to find whether the model already exists in literature.

The backend database of equations and symbols was hand-entered. The data is stored as a high-dimensional graph.

Jon says the team plans on launching the product commercially, but everyone is busy.
The status is that the project is "mostly done" as they have the proof of concept working.
They have created a browser-based equation editor, similar to the equation editor in Microsoft Word
The grand view is that formula-database will serve as a universal reference for equations.

Jon says his team has studied the market and students aren't interested in purchasing a subscription. More likely is an advertising-based revenue.
The service is oriented towards homework help, rather than the professional researcher. [Professional researchers already know which equations matter to their work.]

Jon has three Master's degrees -- engineering, math, and physics.

Jon says a common question he gets is "how does your search product compare to wolfram alpha?"

Jon sees Symbolab as their competitor
Jon is familiar with mathdox

Jon brought up Wojciech's project, though he couldn't recall the name EquationMap.
Jon describe's Wojciech's project as graph visualization with hand-entered equations.
Jon says Wojciech's project is more an online tool for concept maps, based entirely on user input. 
draw links between equations
product
Reason for not collaborating is Wojciech is in Poland


20140527

Although HTML5 Canvas is fun to move graphs around with, I need an example showing that it can be used to visualize graphs larger than fits ona single page. Can I think of the canvas as a window for viewing a graph larger than the screen? The ability to zoom in/out would be useful.

Graph Dracula
http://www.graphdracula.net/
Upsides:
-simple and intuitive for development. 
-it can render graphs with SVG and PNG nodes
Downsides: 
-not clear how to render graphs larger than the screen
-no zoom in/out
-I didn't find support for spring force graph layout

20140524

I was contacted by Wojciech on May 15 via email. We talked via phone about our projects.

I emailed 3 of the project developers for Formula-database and Jon Seaton replied. I will call him Tuesday to talk about status and plans.

I updated the content on
https://sites.google.com/site/physicsderivationgraph/

20140216

more cleanup tasks:
-move "lib/images_op_*" to "lib/images_infrule_*"
-move "lib/images_eq_*" to "lib/images_statement_*"

consequences:
-single change in each of "create_pictures_of_*"
-change "build_connections_graph.py"

20140216

Successfully completed run on existing connections with CAS check (sympy). Report:

number_of_rules_not_checkable=58
number_of_checkable_rules_not_checked=93
number_of_tested_true_connections=19
number_of_tested_false_connections=15
number_of_connection_setups_with_error=0

20140215

Problem: sympy doesn't recognize the validity of simple statements:

import sympy
x = sympy.Symbol('x') # from outputs
a = sympy.Symbol('a') # from outputs
b = sympy.Symbol('b') # from outputs
c = sympy.Symbol('c') # from outputs
out_lhs0=(x**2) + ((b/a)*x) + (c/a)
in_lhs0=(a*(x**2)) + (b*x) + c
feed0=a

>>> in_lhs0/feed0
(a*x**2 + b*x + c)/a
>>> out_lhs0
x**2 + b*x/a + c/a
>>> out_lhs0 == in_lhs0/feed0
False


20140215

How do I define success for this project?

When someone else learns something new as a result of using this tool. 

The first user will either be a developer (someone accessing the xml database) or, more likely, a user accessing the content through a GUI.
Thus, although the content and framework are necessary, they are not sufficient -- a GUI is needed to make the tool user friendly.
The GUI should be introduced through a walkthrough. A video would be a good tutorial.

20140215

I repeatedly use the following functions, so these should be made Python functions:

convert statement_punid to array of symbol_punid
convert statement_punid to          statement_latex
convert statement_punid to          cas_sympy_LHS,cas_sympy_RHS
convert feed_tunid      to          feed_latex
convert feed_tunid      to          feed_sympy
convert feed_tunid      to array of symbol_punid
convert symbol_punid    to          cas_sympy

20140214

XML tags currently in use:
****************************
inference rules xml:
"inference_rule_name" (string)

symbols xml
"name" (string)
"label" (integer)

statements xml
"statement_index" (integer)

feeds xml
"feed_label" (integer)

connections xml
"op_name" (string)
"op_label" (integer)
"statement_index" (integer)
"statement_label" (integer)
"feed_label" (integer)

comments xml
"applies_to_statement" (integer)
****************************

"inference_rule_name" and "op_name" are supposed to be the same for linking purposes
"statement_index" in statements xml is same as "statement_index" in connections

in connections xml, "op_label" and "statement_label" are temporary integers local to the connection_set. 
op_label allows for duplicate use of the same inference rule on the graph.
statement_label allows for duplicate use of a statement_index in a tex document. 

To be more clear, I'm eliminating "index" and "label" as descriptors. Instead, I'll use "tunid" and "punid" for temporary/permanent unique numeric identifier.

****************************
inference rules xml:
"inference_rule_name" (string)  --> infrule_name

symbols xml
"name" (string)                 --> symbol_name
"label" (integer)               --> symbol_punid

statements xml
"statement_index" (integer)     --> statement_punid

feeds xml
"feed_label" (integer)          --> feed_tunid

connections xml
"op_name" (string)              --> infrule_name
"op_label" (integer)            --> infrule_tunid
"statement_index" (integer)     --> statement_punid
"statement_label" (integer)     --> statement_tunid
"feed_label" (integer)          --> feed_tunid

comments xml
"applies_to_statement" (integer)
****************************


20140213

Major tasks in priority order:
-implement CAS [completed 20140216]
  -focus on getting a single inference rule to work in all cases [completed 20140215]
-make jargon consistent (remove "op_label" with "inference_rule", label versus index) [completed 20140214]
-command-line prompt
-web GUI
-add content
-better graph rendering
-SVG support

20140213

view existing graph
  full graph or single connection_set
    generate full graph
    which connection_set?
      generate connection_set graph
view existing connection_set PDF
  which connection_set?

list existing inference rules
edit existing inference rule
create new inference rule

list existing connection_sets
edit existing connection_sets
  which connection_set
    which connection
      which field to edit?
create new connection_set
  set name
  add new connection
    use existing inference rule
      which inference rule?
    create new inference rule

20140213

fixed bugs:
-png graph now shows feeds
-no more static date in lib_physics_graph
-PDF generation works
extras:
-created bash script to test all Python scripts in bin
-modified tgz generator to detect date and svn automatically

20140213

algorithm for doing a derivation.

1) start by declaring initial equation
-declaration has no input statement
-declaration has no feeds
-declaration has one output statement

[repeat as needed]

2) apply an inference rule 
-inference rule has at least one input statements
-inference rule has zero or more "feeds"
-inference rule has at least one output statement

[repeat as needed]

3) declare derivation finished
-declaration has at least one input statement
-declaration has no feeds
-declaration has no output statements


20131222

bugs:
in "def make_picture_from_latex" in "lib_physics_graph.py"
the date should not be statically set. It should be passed to the function as an argument

in "bin/build" the feeds probably aren't being done correctly. 
For example, "multbothsidesby" is not getting the correct number of arguments in the .tex file

"op_name" should be "inference_rule_name"

20131222

previously re-factored "feeds" into separate database.
This broke "build_connections" and "create_pictures" scripts

Added a "build deployable tgz" shell script which works

A "test scripts" script would be useful to check that changes don't break functionality.
Currently not sure how to test correctness of scripts

20131124

wrote "generate_new_random_index" for each database
wrote "list_inference_rules" and "list_connection_sets"
created website
https://sites.google.com/site/physicsderivationgraph/

20131117

Removed from bin/build:

No longer requires "dvisvgm"
"dvisvgm" is from http://dvisvgm.sourceforge.net/

Removed from main README: links

SVG, Latex, GraphViz on WordPress:
http://e.metaclarity.org/wordpress-plugins/wprender/
http://e.metaclarity.org/142/rendering-tex-graphs-to-svg-in-wordpress/

Creating animations with graphviz
http://gromgull.net/blog/2011/02/creating-animations-with-graphviz/

20131110

reorganized structure closer to
https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard

20131110

I realized I have two diverging objectives, and I was stuck at the fork since taking both seems insurmountable. The two projects are (1) enlarge the database of relations and (2) build a pleasant web interface which reads and can be used to add to the graph database.

My vision and strength is in building the database, not the GUI. How can I best spend my effort on this part?
There are two subtasks: 
-developing/choosing a syntax to express the equations. Latex, Mathematica, ML, XML,
-determing what the audience is interested in getting from this work. What would motivate interest in this project by users and developers?
I think non-physicists and beginners are aware of a one or a few mathematical elements of physics. The most common is "E=mc^2". Although practically everyone is aware of it, few know how it's related to anything else. Undergrads in physics are aware of "F=ma" and "distance=rate*time" but there's not clear connection. 

Thus, this project can demonstrate value by showing the relation between things people already have familiarity with. 

A list of "common" equations in physics, in order of priority:
E=mc^2
F=ma
x=vt
Heisenberg uncertainty
diffusion
simple harmonic oscillator [done for particle in a box]
Maxwell's equations [done]
Schrodinger eq [done]

A second tier, but of interest:
creation/annihilation operators
superconductivity
Lorentz contraction/dialation
Boson/Fermion distributions

If I can show the relation between these in my database, that would cover much of the scope. 

What I currently have in connections_database.xml by subdiscipline:

math basics:
  quadratic_equation_derivation: for 2nd order polynomial, solve for roots
  euler_equation_proof: \exp(i x) = \cos(x)+i \sin(x)
  euler_equation_trig_sqrt: (\sin(x))^2 = \frac{1-\cos(2x)}{2}
  euler_equation_trig_relations: 
  integration_by_parts: generic u,v
  curl_curl_identity: used in E&M
  example_of_Godel_problem: using a,b,c, make a false relation
  variance_relation

physics basics:
  frequency_relations: k=omega/v, lambda=v/f, T=1/f

quantum:
  derivation_of_Schrodinger_Eq: ends up at {\cal H} \psi\left(\vec{r},t)\right) = i \hbar \frac{\partial}{\partial t}\psi(\vec{r},t)
  particle_in_a_1D_box: starting from \frac{d^2}{dx^2} \psi(x) = -k^2 \psi(x), solve for \psi
  quantum_basics_orthogonality: 
  quantum_basics_Hermitian_operators_have_realvalued_observables: 

E&M:
  maxwell_to_electric_field_wave_equation
  electric_field_wave_equation_time_dependent_to_time_independent



20131104

https://en.wikipedia.org/wiki/Outline_of_physic

https://en.wikipedia.org/wiki/The_Unreasonable_Effectiveness_of_Mathematics_in_the_Natural_Sciences
http://www.dartmouth.edu/~matc/MathDrama/reading/Wigner.htmls

http://worrydream.com/MediaForThinkingTheUnthinkable/
https://news.ycombinator.com/item?id=6671118


Directed Graph Editor
http://bl.ocks.org/rkirsling/5001347

Used for graphical logic [not far from my topic of interest!]
http://rkirsling.github.io/modallogic/

Source: 
https://news.ycombinator.com/item?id=6232624

Another interface, not quite as intuitive:
https://logicpull.com/demo/editor/2

20130728

https://www.cs.utexas.edu/users/EWD/ewd13xx/EWD1300.PDF
Dijstra's Notational Conventions mostly covers this topic with his "hints" though they are not the same as what I'm doing here.

http://mizar.uwb.edu.pl/project/

20130215

Started reading "Graph-based knowledge representation"

The physics graph does not directly lead to reasoning ("modus ponens").
Suppose we have a statement "A=B" which is valid
The statement "2*A=2*B" is clearly related to the first statement and is also valid.
However, this second statement doesn't belong on the physics graph because it doesn't get us closer to a physical observable.
There's probably an infinite number of these "true but useless" statements. The difference is that the physics graph seeks the minimum number of equations and inference rules.

The repeated failure of semantic graphs and knowledge representation is the lack of quantification of memes. I have not seen this acknowledged in the literature.

20130126

To elaborate on the GUI milestones given 20130121,
1) ability to interact (zoom in/out, pan) with the graph
method 1: 
	step 1: render graph with Graphviz
	step 2: duplicate multiple down-scaled copies of the graph
	step 3: chop each of these scaled graphs into subsections
	step 4: use flash or HTML5 to navigate (i.e., Google Maps)
downsides: 
-each re-rendering takes long time, memory, graphviz, convert

method 2:
	step 1: render the statements, inference rules, and their connections
	step 2: navigate around a dynamically-rendered graph (using HTML5)
-more flexible graph layout
2) edit the graph (add data, make connections) to produce a new graph

20130126

The question the graph answers is, "What does the visualization of physics derivations look like?"
(but no one has explicitly asked that since its usefulness isn't obvious).

For me, putting derivations in graph from addresses a few needs:
-make steps taken in derivation atomic and explicit
-explicitly declare assumptions, initial equations, final equations
-mistakenly flipping signs or neglecting terms is more likely to be caught by a CAS

The .tex/.pdf output is tangential to the graph. These files show how the graph is related back to standard derivation form.

20130124

If the physics graph turns out to be useful, what are the next steps?
-better quantization of the natural language graph
-knowledge graph
-meme quantization

20130122

There are three databases:
-symbols
-statements
-inference rules

There are three types of symbols: variables, constants, and operators which act on symbols excluding =,<,>,<=,>=

The statements database is composed of equations and inequalities (LHS, RHS, related by only the operators =,<,>,<=,>=)

Inference rules refer to operators which act on statements.

20130121

currently I enter data manually and render the graph using graphviz. I want to have a pretty GUI for non-developer users.

There are two distinct milestones for the GUI.
1) ability to interact (zoom in/out, pan) with the graph
2) edit the graph (add data, make connections) to produce a new graph

Until I reach 2, I can still manually enter data. Simply navigating the graphed data is the first step.

Prior to step 1, I need a better way of rendering the static graph. Graphviz has the capability to do the enter graph data, but the rendering is not pleasant to look at.

20130120

I resolved how to capture both bra-ket notation and Einstein summation notation.

Bra-ket notation requires 4 new Latex operators:
\bra{} # \bra{a} = <a|
\ket{} # \ket{b} = |b>
\op{}  # \op{H} = \hat{H} when rendered, but here \hat{} shouldn't be confused with unit vector
\braket{}{} # this is necessary because we don't want to see <a||b>

For Einstein summation notation, there are two possible combinations and each has three arguments:
\rowCovariantColumnContravariant{}{}{} % left-bottom, right-upper
\rowContravariantColumnCovariant{}{}{} % left-upper, right-bottom
Then instead of $A_{b}^{\ \ c}$ we would specify \rowCovariantColumnContravariant{A}{b}{c}
And  instead of $D^{g}_{\ \ f}$ we would specify \rowContravariantColumnCovariant{D}{g}{f}

As far as I can see, these 6 operators cover all possible cases.

20130114

http://www.google.com/insidesearch/features/search/knowledge.html

20130113

I was able to get sympy working on my Mac.
Error message:
RuntimeError: module compiled against API version 6 but this version of numpy is 4
solution from:
https://trac.macports.org/ticket/31891
import sys
sys.path.reverse()
import sympy


features:
http://docs.sympy.org/dev/modules/functions/elementary.html
http://docs.sympy.org/0.7.2/tutorial.html

x = sympy.Symbol("x")
n = sympy.Symbol('n', integer=True)
f = sympy.Symbol('f', cls=Function)
((x+y)**2).expand()
((x+y)**2).subs(x, 1-z)
diff(sin(x), x)
summation(f, (i, a, b)) = \sum_{i=a}^b f
integrate(sin(x), x)
integrate(x**3, (x, -1, 1))

also supports spherical harmonics, pattern matching

I don't see anything useful in
http://docs.sympy.org/0.7.1/modules/assumptions.html

20130113

My current mapping of jargon is 
(my phrase) = (standard logic terms, based on http://en.wikipedia.org/wiki/Inference_rule)

statement = proposition
declareInitialEq = premise
declareFinalEq = conclusion

Some of the "inference rules" may actually be "effective methods"
http://en.wikipedia.org/wiki/Effective_method
in that they can be reduced to a finite set of steps. Example: functionIsEven

Warning: none of my inference rules show up on
http://en.wikipedia.org/wiki/List_of_rules_of_inference

I'm developing a propositional calculus
http://en.wikipedia.org/wiki/Propositional_calculus
for physics.

derivation = a linear sequence from premise to conclusion


I found reference to "rules of inference" in
Metatheory of Physics Theories, And the Theory of Everything :: Stephen Blaha
http://books.google.com/books?id=I0jpqxJHqZoC	
but I think he's a crank.

Almost all mentions to rules of inference say something along the lines "suppose you have a list of inference rules..."
or they just use "A --> B" as a trivial example.

Created new post,
http://www.physicsforums.com/showthread.php?p=4228165

20130109

observations:
-only work on entering one derivation at a time
-recompile the graph every few entries to limit the amount of code errors can hide in
-Also, compiling PDFs shows bugs not found compiling the graph
-the start and end of a derivation should be limited by named statements or statements which have experimental relavence. Basically, if you are at some equation which would be useful to other derivations, terminate.


20130109

No existing computer algebra system that I know of handles bra-ket notation or Einstein summation notation.
I know of only one type-setting method which is free, open-source: Latex. (Microsoft Word isn't a competitor)

How does MathML handle bra-ket and Einstein notation?

Are the inference rules for bra-ket and Einstein notation specific to those notational systems? 

20130106

Q: Why is Einstein notation and bra-ket notation important to include?
A:
-they are compact notation
-they are how physicists communicate in practice. I'm not interested in restricting the normal communication methods to fit my graph abilities. If the graph cannot handle the notation, this is a fault of the graph.
-the notation is independent of dimension. The notation is abstracted away from a specific dimension. Example: $\vec{r}=x\hat{i}+y\hat{j}+z\hat{k}$ OR $\vec{r}=x\hat{i}+y\hat{j}$. I shouldn't need to specify the dimension for a derivation.

The fact that there is no ISO standard or even a convention for some communication details in physics means the scope of this project may be overly ambitious. Then the purpose of the project is to show how much we need standardized notation convention.
Conversely, any attempt to describe all of physics results in a standardization of notation. That would arguably be a useful result. The reason there is no standard notation is because no one has ever needed one (prior to this project). Derivations were allowed to use locally-defined conventions.

20130106

Q: What are the problems with the current implementation?
A:
-tedious process of data input for a given derivation
-need to simultaneously update "statements" "connections" and "grammar" databases (lack of unified interface)
-graph produced is static
-tex/pdf does not read smoothly
-lack of comments on graph
-graph and tex merely presents known derivations and serves no clear useful purpose (what is the motivation for use?)
-lack of support for Einstein summation notation and bra-ket notation
-the person entering the data has to be intimately familiar with the grammar rules and the statements already entered

Q: What drives adoption of new software technology?
A:
1) useful idea
2) elegant interface

20130105

The derivation from Maxwell's equation to the quasi-1D waveguide is in

/svn/research/Project_Quasi1D_Transport/2012_Closed_Channels_manuscript/derivation/quasi1d_derivation.pdf

It involves the particle in a box, which is my largest derivation so far. Thus adding the quasi-1D will result in a single graph.

20130105

I am now able to answer my own question from 20130101

There are three classes of operators:
-operators which act on physically-defined symbols within an expression. +, -, *, /, ^, \int, \frac{d}{dx}
-operators which relate two expressions. There is always a LHS and RHS and the resulting proposition is True in the physically-testable sense
-operators which relate (commonly two) propositions, called inference rules. 

Example involving symbols not physically defined: 
Suppose in the course of a derivation there is a <a href="https://en.wikipedia.org/wiki/Proposition">statement</a> of the form
$A=B+C$
Then suppose I have a second statement,
$A+2=B+C+2$.

There are three distinct operators involved in this process:

First, "+" is an operator acting on symbol inputs "B" and "C" to produce the expression "B+C". 
The operator "+" is in the same class of <a href="https://en.wikipedia.org/wiki/Binary_operation">binary operations</a> as subtraction, division, multiplication, 
<a href="https://en.wikipedia.org/wiki/Exponentiation">exponentiation</a>, integration. Each of these operator is isolated to relations within a single expression. An expression is either the left or right sides of a proposition.

This makes unary and binary operators distinct from a second set of relation operators like =,<,>,>=,<= which relate two expressions on the two sides sides of a <a href="https://en.wikipedia.org/wiki/Proposition">proposition</a>.

Third, the set of operators which relate statements, <a href="https://en.wikipedia.org/wiki/Rule_of_inference">inference rules</a> are distinct from either of the other to sets of operators.

My project is distinct from work done on <a href="http://www.existentialgraphs.com/egcontrollibrary/UsingTheGraphs.htm">graph-theoretic formal language</a> by <a href="https://en.wikipedia.org/wiki/Charles_Sanders_Peirce">C. S. Pierce</a> as I'm interested in mapping physics, not logic.

There is an ISO standard: https://en.wikipedia.org/wiki/Common_Logic

Book: Graph-based Knowledge Representation: Computational Foundations of Conceptual Graphs (Advanced Information and Knowledge Processing) by Michel Chein and Marie-Laure Mugnier

candidate journal
https://en.wikipedia.org/wiki/Journal_of_Formalized_Reasoning
http://jfr.unibo.it/

http://www.jfsowa.com/pubs/

20130105

posted questions 1 and 2 from 20130101 to
http://www.physicsforums.com/showthread.php?p=4218940

my previous unanswered question is
http://www.physicsforums.com/showthread.php?t=661798

In addition to the simple page on operations,
https://en.wikipedia.org/wiki/Operator_(mathematics)

Good, but not exactly what I'm talking about:
https://en.wikipedia.org/wiki/Table_of_mathematical_symbols
https://en.wikipedia.org/wiki/List_of_operators
https://en.wikipedia.org/wiki/Rule_of_inference
https://en.wikipedia.org/wiki/Modus_ponens
https://en.wikipedia.org/wiki/Propositional_calculus
https://en.wikipedia.org/wiki/Propositional_calculus#Graphical_calculi
http://www.helsinki.fi/science/commens/terms/graphlogi.html
https://en.wikipedia.org/wiki/Conceptual_graph
https://en.wikipedia.org/wiki/Diagrammatic_reasoning
https://en.wikipedia.org/wiki/Theory_of_relations

This is what I'm after, but specific to physics rather than logic
https://en.wikipedia.org/wiki/Logical_graph
This looks to be a horrendous implementation of the more abstract mathematically-motivated version:
http://www.existentialgraphs.com/
http://www.existentialgraphs.com/egcontrollibrary/UsingTheGraphs.htm
http://www.clas.ufl.edu/users/jzeman/
http://dr-dau.net/eg_readings.shtml

Not useful:
https://en.wikipedia.org/wiki/List_of_transforms
https://en.wikipedia.org/wiki/Derivative_(disambiguation)
https://en.wikipedia.org/wiki/Derivation_(disambiguation)
https://en.wikipedia.org/wiki/Relational_algebra

Probably a good start:
https://en.wikipedia.org/wiki/Formal_proof

I'm not developing a new proof assistant since my graphs prove nothing. 
https://en.wikipedia.org/wiki/Proof_assistant
https://en.wikipedia.org/wiki/Automated_proof_checking
https://en.wikipedia.org/wiki/Automated_reasoning

I'm not claiming proof of the statements I make. That's left to experiment for verification.
https://en.wikipedia.org/wiki/Computer-aided_proof
https://en.wikipedia.org/wiki/Automated_theorem_proving
https://en.wikipedia.org/wiki/Computer-assisted_proof
https://en.wikipedia.org/wiki/Formal_proof

Too abstract:
https://en.wikipedia.org/wiki/Metamath


20121304

Both bra-ket notation and Einstein notation have two additional complications: 
-representation not interpretable by standard CAS: $|a\right>$ and $A^{\ a}_b$
-non-commutative algebra: $[x,p] != [p,x]$ ; $\psi^*\psi != \psi\psi^*$ 

Worse, I feel quantum mechanic notation does not follow any standard convention. For example,
$|x \right> |y \right>$ may be a meaningless expression, or it may be equivalent to $|x y\right> = |x,y \right>$.
These are what I would call local conventions.

The problem with the existance of local conventions is that people with different local conventions are less likely to enthusiastically use this framework.
This is because, in addition to embracing the framework, they also need to accept a different local convention.
Therefore I have to explicitly explain what benefits there are to the local conventions I use.
-are they more efficient expressions
-more easily interpreted by a CAS?
-self-consistent

If my framework doesn't cover bra-ket and Einstein notations, then that rules out quantum mechanics and some electrodynamics. This leaves some electrodynamics, classical mechanics, thermodynamics, relativity.

20130101

Q: how to publish this idea?
A: arxiv or a journal on physics education.
Justifications for submission to education journal: 
-This gives a method to teachers to quantifying the complexity of the questions being asked of students -- how many steps does the derivation take, how messy is the graph [come up with a way of quantifying the messiness].
-Teachers can review the grammatical rules with students to check that the students are familiar with each necessary for a derivation.
-Students using the method explicitly have to say what the boundary conditions are, what the assumptions are, and what the initial and final statements are.
-Formalizing the process with a finite basis of grammar rules does not mechanize the derivation. Rather, it demonstrates why humans must carry out the derivation.
Problems: 
-I don't read physics education journals.
-I don't have the proper jargon yet
-I would like to have a simple way of diagramming the process -- the pictures of the graph for any meaningful derivation are large.
-I wouldn't have space to list all the grammar rules, and it is unlikely I would have all of them. 
-I haven't proved there are a finite number of grammar rules, and I don't even have an estimate on the upper bound yet.
-I don't want to simply specify the XML formatting. 
-I don't have a limited scope to the problem yet -- CAS checking, symbol linking, comment linking, pretty GUI.

Algorithm for adding content to the graph:
-do the derivation you are interested, writing out steps needed on paper. Should be simple and as few steps as possible
-re-write with all the intermediary steps (include the statements previously skipped)
-re-write with the simplest grammar rules possible -- ones which cannot be decomposed
-add content to connections database. Use grammer rules from database and input equations as needed. Add these same equations to the statements database.
-every few connections run the build scripts to check the syntax and formatting of your input

Using
cat grammar_database.xml | grep \<grammar_rule\> | wc -l
I currently have 54 grammar rules.

Jargon:
From the wikipedia entry on "operation (mathematics)"
+, -, *, / are operators. operators produce a new value from one or more input values. [Thus equality is not an operator?]
unary operations take one argument, binary operations take two arguments.

It looks like what I care about is in the wikipedia entry "equation" under properties.

In the entry "Equation solving," what I refer to as LHS and RHS are "expressions related by equality."

Draft of post for math forums:

I've broken my discussion into four separate questions. I use LHS and RHS to denote left and right hand side of a statement, respectively.

Suppose in the course of a derivation there is a mathematical statement of the form
A=B+C
then "+" is an operator acting on inputs "B" and "C" 
Question 1: Is the output of the operation "A" or the expression "B+C"?
The reason I think the output may be "B+C" is because in the statement X=(Y+Z)+W, wouldn't the output of the first addition be Y+Z?

Question 2: Since "=" has two inputs (the LHS and RHS expressions), is it also an operator? [If "=" is an operator, again what is the output?]

Now suppose I have a second mathematical statement,
A+2=B+C+2
Statements 1 and 2 are related by an operator, "add 2 to the LHS and RHS of statement 1." The inputs to this operator are the value to be added and which statement to apply the function to. The output is the second statement.
Question 3: where can I read more about operators which act on and relate statements?

The operator "+" is in the same set of operators as -,/,*,^,\int in that they are isolated to relations within a single expression. 
This make them distinct from operators like =,<,>,>=,<= which relate two expressions (LHS and RHS).
Lastly, the set of operators which relate statements are distinct from either of the other to sets of operators.
Question 4: Do these three separate sets of operators (if that is what they are) have distinct names, or are they all referred to as operators?

My motivation for this series of question is that I'm trying to enumerate the list of operators in the third set (how statements are related in a derivation). This requires also enumerating the full set of operators in the first and second sets.


20121231

Posted question about prior work to Physics Forums
http://www.physicsforums.com/showthread.php?t=661798

*********************
I'm working on creating graphs of derivations in physics and am searching for prior work in this area. As an example, I've posted pictures of the graph of Euler's equation
https://physics-equations-graph.goog..._no_labels.png
and for the simple harmonic oscillator
https://physics-equations-graph.goog..._no_labels.png
(right click on link and save as to download picture -- direct link doesn't seem to work.)

The idea is that a derivation is composed of equations and descriptions of how the equations are related. I'm calling the equations "statements" (red ovals in the pictures) and the relations between statements "grammatical rules" (red trapezoids in the pictures). I expect there are a finite number of these grammatical rules. One of the goals of my project is to enumerate these grammatical rules.

The problem I would like to resolve is how this project relates to prior work. I'm not sure what has already been done by others, which is why I started from scratch and am inventing jargon. There seems to be an overlap with physics, math, and possibly linguistics. However, I've found no references in any of these areas.

Somewhat related is the work being done with OpenMath but this only applies at the "statement" level. 
Computer algebra systems can be used to verify individual "grammatical rules," but that is the limit of their usefulness.

Please let me know if you have suggestions for related work. Thanks in advance.
*********************

Potential future candidate forums:
http://physics.stackexchange.com/
http://math.stackexchange.com/
http://www.physicsforums.com/forumdisplay.php?f=73   (general math)

I'm not asking "are there a (fundamental) set of relations between equations?"
I'm writing down that list by doing derivations.

20121230

completed particle in a box derivation, including derivation of Euler's equation.
Now I see that the graph is very complicated (linearity is present in the tex file).

I'm not clear on how the graph is useful. 

I'm creating a framework for connecting all the knowledge in physics (the grammar database) and then connecting all the statements in physics.

There is nothing new to be found, other than how all the statements are related.

20121226

Attempt 1:
sudo easy_install sympy

   ImportError: It appears 2to3 has been run on the codebase. Use Python 3 or get the original source code.

see
https://code.google.com/p/sympy/issues/detail?id=3437
and
https://groups.google.com/forum/#!msg/sympy/JEwi4ohGB90/PKDNAEA4_ZkJ

Attempt 2:
Downloaded sympy from Google code:

https://code.google.com/p/sympy/downloads/detail?name=sympy-0.7.2.tar.gz&can=2&q=

cd sympy-0.7.2
python setup.py install

pub-wifi-132-211:sympy-0.7.2 benpayne$ python
Python 2.7.3 (v2.7.3:70274d53c1dd, Apr  9 2012, 20:52:43) 
[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import sympy
RuntimeError: module compiled against API version 6 but this version of numpy is 4

This is a numpy error.

20121225

There are two types of conditional math statements:\\
``conditional''
\begin{equation}
f(x)=a \quad {\rm where} x<0
\label{eq:1}
\end{equation}
``conditional cases''
\begin{equation}
f(x)= \begin{cases}
      a &  x<0 \\
      b &  x\geq 0
      \end{cases}
\label{eq:2}
\end{equation}

Eq 2 is a complication on top of Eq 1. 
Eq 2 represents another example of parallelism (like $\pm$).

Eq 1 is expressible using a step function: $f(x)=a \Theta(x-0)$
Thus Eq 2 can be broken into two statements using step functions.

The step function doesn't handle complicated conditionals like
\begin{equation}
f(x)= \begin{cases}
      a &  x {\rm odd} \\
      b &  x {\rm even}
      \end{cases}
\label{eq:2}
\end{equation}
Although these conditional statements can be typeset using Latex, the questions are
--how does a CAS handle them as input? (As one statement or two?)
--how does this effect grammatical rules?



20121224

The operators_database.xml is an encoded set of grammatical rules for operating on the "words" in equations_database.xml.

Google searches for
grammar of physics
grammatical rules for physics
don't return anything interesting.
Yesterday's search for
systemization of physics
didn't return anything useful (other than the Autism sites).

As pointed out in the last paragraph of
Noam Chomsky's "Three models for the description of language"
one can construct a graph relating the statements.

The syntax for the xml-->tex is sufficiently strict than many errors are detected when compiling Latex.
As a result, I can't put in dummy connections. 
This isn't the same as using a CAS to check the connections, but it does ensure syntactical correctness.

20121224

I should also explicitly say what I am not trying to do:
--explain all of physics (and math). [This is done better in textbooks and research papers.]
--build a framework capable of describing all of math. [I'm not sufficiently familiar with math notation.]
--make money. [I don't think what I'm doing constitutes a viable financial plan.]

What I am trying to do:
--build a framework capable of describing and relating all of physics in a centralized electronic format. [So far there are only a few exceptions to what I can handle.]
--have an intuitive GUI with latex-based input. [Doesn't exist yet.]
--keep everything human-readable. [So far I can read it.]
--use only open source, stable software with significant community (user+dev) base. [Python, XML, dvi2png, Latex]
--minimize the number of external dependences (i.e., only use Python rather than Python+Perl+Mathematica) while not re-inventing the wheel (XML rather than complicated flat text file)

20121224

OpenMath standard is about the semantic meaning of an equation,
MathML is focused more on presentation of the question (rendering for web browser)

Advantage of OpenMath over Latex is that the validity of the equation can be verified.
Latex would accept $\frac{+}{x}$, whereas OpenMath would not.

From reading the OpenMath.org Technical overview, I see my symbols_database.xml is a content dictionary, but OpenMath content dictionaries go further than I need - they include \log, \int.
"physical_consts1" is available as XHTML as of 2006. A nice example but not exhaustive.

20121224

Now that I have
xml --> tex [almost done]
xml --> graphviz png [works as desired]
xml ~~> networkx [needs improvement]
What is next?

I don't have a strong need for "xml --> svg", but it could be used with GraphML

It might be nice to have a conversion tool between my Latex formatted XML and MathML, OpenMath. 
This may become necessary for interacting with a (free) CAS.

My goal is to interact with the equations though a graph in a GUI and be able to produce .tex/.pdf output. Then check the output using a CAS.
To accomplish this, I need
-graph GUI: 
--example platforms: interactive HTML5, stand-alone GUI
--ability to write to XML files from GUI
-CAS

Although I can attack the above list in parallel, I think the CAS would be most helpful.
The CAS needs to be open source, free (thus not Mathematica, Maple, MathCad, Magma), stable, with a significant community of users.
See Wikipedia article "list of computer algebra systems"
--Axiom
--Euler
--GAP
--Mathomatic
--Maxima
--OpenAxiom
--PARI/GP
--Sage
--SINGULAR
--SymPy
--Xcas
--Yacas

Of these, SymPy is appealing simply because it is a Python library.
As of November 2011, Latex is not a valid input method for SymPy.
--complaints that Latex is Turing complete (thus increased complexity -- Latex is capable of anything)
--lack of support for Mathematical Expression tree
--multiple formats for same thing

Q: is the input to SymPy universal? (Can it take MathML or OpenMath?)
[initial answer: not as far as I can tell.]

20121224

The $\pm$ (i.e., quadratic equation) represents parallel processing. Since derivations are linear, this allows consolidation.

task list:
-decide which open source license to release the content under
-add the license to the header of each file

Unresolved: 
-how to handle statements like "$f(x)$ for $x>0$."

If feels more like I'm developing an Integrated Development Environment.
When the user types in a Latex equation, options would automatically pop up. User types "E" and gets a menu "Electric field; energy".
Then my *database.xml files would be inputs to something wide-spread like Eclipse.
The "compile" option would yield the png graph, tex file, networkx output, etc.

How to create the latex output from the connections database?
We effectively have
Initial
   |
equation
   |
operator
   |
equation
   |
operator
   |
equation
   |
 Final

How to group these? (the connections_database is operator/[optional] input/[optional] output)
Operators take input equation indices and and produce output in the form \begin{equation}a=b\end{equation}

------------
| Initial  |
|   |      |
| equation |
------------
------------
| operator |
|   |      |
| equation |
------------
------------
| operator |
|   |      |
| equation |
------------
------------
| Final    |
------------

  
20121223

There seems to be no advantage to Latex versus MathML (both presentation and content formats) when decoding symbols.
For example, with $E=mc^2$, we still need to know that c=speed of light with units [length/time]; similarly for E and m.

As far as whether variable $i$ needs to be expanded to $\sqrt{-1}$ could be stored in this same symbols_database
That is, if $i$ is a summation index, then it is a symbol of type variable. Otherwise the symbol is of type constant with value $\sqrt{-1}$.
Similarly for $\pi$: symbol of type variable or constant.

This implies the symbols database should not be separate from the statements_database. Each statement has its associated symbol usage.
Units for a symbol should also be included.

20121222

Q: Is there any reasons Latex shouldn't serve as input to Computer Algebra Systems (CAS)?
A: Yes:
--lack of support for $\sqrt{-1}=i$. Is $i$ a variable or does it have a specific numeric meaning?
--other examples: $\pi$
--user mistakes are allowed in Latex: "cos" instead of "\cos", "log" instead of "\log"
--aesthetics of rendering are left to user: a/b versus $\frac{a}{b}$
--imprecise rendering of sub/super scripts: $x^1_2$ versus $x^{\ 1}_2$ (necessary for Einstein notation).

Before discarding Latex, we need to determine whether alternatives are better.
Q: What alternative equation statement formats are there?
A:
--MathJax
--MathML: "presentation" and "content" formats. 
  --Presentation format is supposed to be comparable to Tex, though the code is uglier (see $\int$ in MathML). MathML is more verbose than Latex, but it also allows more exact rendering of equations (it resolves the Einstein notation problem mentioned above).
  --Content format is much more verbose than Latex. Uses Reverse Polish Notation: function argument argument. Example: $x+a$ is + x a
--OpenMath: meant for integration with CAS. Very verbose.

Regardless of the choice for storing statements, I intend to use the statements converted to equations in a graph.
Also, the graph should be able to be created in any format -- dot, graphml, networkx.

20121220

I discovered MathML during my search for using Latex as input to Computer Algebra Systems (CAS).

I realize now that Latex simply renders equations for visualization. It's a translation between math symbols and ASCII.

Although MathML is slightly more sophisticated than Latex, the intention is still just to render equations (at least for presentation mode).
I'm not familiar enough with content mode, but I expect it is not as user-friendly as entering plain Latex.
I suspect any math storage method amenable to a CAS won't be as easy to enter as Latex (which is meant for rendering only).

The point is that although I can debate whether equations should be stored in Latex or MathML, there aren't any competitors for "connections_database.xml" and "operators_database.xml" regardless of format

There's nothing in MathML which is like what I am doing. I don't expect there to be.
I haven't seen anything in CASs which supports what I want to do. Given 5 items,
LHS1 compare RHS1
operation
LHS2 compare RHS2
Is (Carry out "operation" on LHS1)==LHS2? 
Is (Carry out "operation" on RHS1)==RHS2? 

This simplified description leads to the algorithm for CAS:

input eq1, eq2, operation
Parse eq1 into LHS1, RHS1; # use regex to separate at =
Parse eq2 into LHS2, RHS2;
LHS1' = Apply operation to LHS1; # this is where the CAS is needed
RHS1' = Apply operation to RHS1;
LHSmatch=(LHS1'==LHS2); # this comparison needs to be done by the CAS
RHSmatch=(RHS1'==RHS2);
if ( LHSmatch and RHSmatch ): 
  print "this connection appears valid"
  return 1
else:
  print "this connection appears invalid"
  return 0

This algorithm assumes no feeds, one input (eq1), one output (eq2).
What would the algorithm be for multiple feeds, multiple inputs, multiple outputs?

input feed_array input_eq_array, output_eq_array, operation
# each operator has three arguments: operation(number_of_feeds,number_of_input_statements,number_of_output_statements)
for input_indx in range(len(input_eq_array)):
  Parse input_eq_array[input_indx] into LHS[input_indx], RHS[input_indx]; # use regex to separate at =
for output_indx in range(len(output_eq_array)):
  Parse output_eq_array[output_indx] into LHS[output_indx], RHS[output_indx]; # use regex to separate at =
# What is done next depends on the operation
if ((len(feed_array)==0) and (len(input_eq_array)==1) and (len(output_eq_array)==1)):
  LHS1' = Apply operation to LHS1; # this is where the CAS is needed
  RHS1' = Apply operation to RHS1;
  LHSmatch=(LHS1'==LHS2); # this comparison needs to be done by the CAS
  RHSmatch=(RHS1'==RHS2);
  if ( LHSmatch and RHSmatch ): 
    print "this connection appears valid"
    return 1
  else:
    print "this connection appears invalid"
    return 0


20121218

Accomplishment: moved common functions into a Python library

by adding descriptions of symbols I've gone from a symbolic relation database to a semantic relation database

observation:
In connections_database.xml, the <operator> and <feed> have associated <label> tags and unique numbers. These unique numbers are always one time use.
In contrast, the <statement_label> number is not unique -- it must be used in more than one connection.

observation:
I was able to piece together the derivation of the quadratic equation based just on the equations. I had to supply the operators and the feed values.
I'm reading Noam Chomsky's "Three models for the description of language" and it says that this isn't possible with English and grammer rules.
I think I'm doing something similar for physics. I don't see how to automate what I did.

To resolve:
In the GraphViz output, node labels overlap with the Tex equation, making the math unreadable. "top" "center" and "bottom" are the only choices I see if I want to include the label.
http://www.graphviz.org/content/removing-labels-nodes
Set the label attribute to "". You can do this globally using
  node [label=""]
or on the command line, with -Nlabel=""
neato -Tpng -Nlabel="" connections_result.gv > out.png


The "declareInitialEq" should be at the top of the graph and "declareFinalEq" should be towards the bottom
http://www.graphviz.org/content/attrs#dpos
http://stackoverflow.com/questions/5343899/how-to-force-node-position-x-and-y-in-graphviz
http://stackoverflow.com/questions/2476575/how-to-control-node-placement-in-graphviz-i-e-avoid-edge-crossings

20121217

Accomplishment: produced correct graph for a simple set of equations using Python, dvi2png, xml databases.

Plans:
--convert monolithic python script into library+(convert eq and op xml to png/svg)+(convert connections to png/svg)
--add (convert connections xml to .tex/.pdf)
--add (convert connections xml to something checkable by CAS, ie. .nb)
--add (convert connections xml to graphml for other graphing programs)
--add more content to connections xml

In the course of adding variable descriptions to each equation it quickly becomes apparent for the need to identify common variables within equations.
That is, each variable has an associated unique numeric ID. See note on 20121110. This is going to (1) make user creation of equations that much harder ("which $c$ do you want to use?") and (2) make equation redundancy easier to detect.

It also appears that the "connections_database.xml" is either going to 
--be made for each derivation (a set of associated equations which would be one graph/one tex-pdf)
--use tags to associate connections with a given graph
That is, not all the derivations should show up on the same graph. The important unity is to be found in having one "equations_database.xml" and one "operators_database.xml"
The connections_database.xml doesn't need to be unique, though it should have a common format if it gets split up.

20121216

sudo easy_install networkx
sudo easy_install numpy
sudo easy_install scipy
required gfortran from
http://gcc.gnu.org/wiki/GFortranBinaries#MacOS

Problem:
"RuntimeError: module compiled against API version 6 but this version of numpy is 4"

https://trac.macports.org/ticket/31891

tried including 
import sys
sys.path.reverse()
but that didn't fix the error associated with 
import matplotlib

sudo port selfupdate
sudo port upgrade outdated
sudo port select python python27-apple

See also
http://networkx.lanl.gov/pygraphviz/tutorial.html

20121215

Problem description: 
the operators are meant to form a library and be used for multiple relations. Each operator has a unique ID.
The problem arises when a graph is made -- if an operator is used 10 times, there are at least 20 connections made through it (since it only exists once on the graph).
As a result, it is impossible to follow a given path visually.

Generalization:
Each statement (the mathematical equality or inequality) has a unique ID, and each operator has a unique ID.
I expect the same problem to arise for statements -- for example $E=mc^$ will be used in many paths. 

Solution:
Graph nodes should be composed of the following identifiers:
<type of node><statement or operator ID><node ID>
For example, a statement node could be
s5927429.7839
where "s" stands for statement, the numbers left of the radix are the statement ID, and the node ID (a specific instance of the use of the statement) is the numbers right of the radix.

As a rule, no "s" type nodes can connect directly to other "s" nodes. Similarly, no "p" (oPerator) nodes can connect to other operators. 

A third type of node, "c" (comments) is needed and can connect to either statements and/or operators. A comment can connect to an arbitrary number of other nodes.

This design necessitates the following databases
--statements and their unique IDs
--operators and their unique IDs
--comments and the nodes they connect to
--connections database relating statement IDs, operator IDs, and comments.

This observation arose because I was experimenting with graphical representations of the databases and saw the multiple-use problem.
Therefore I should continue to play with implementation as a way to find new problems.


20121202

the problem which arises since not all the statements are immediately linked (you work on one derivation, then you work on a separate problem derivation) is that knowing what has already been added to the database is necessary for linking.
That is, including $\omega=2\pi f$ as a linked statement in the problem I'm working on should be the same $\omega=2\pi f$ already present in the statements database.
However, due to symbolic notation differences, recognizing this will be very difficult. The problem is probably separable into "easy" statements like $T=1/f$ and $k=2\pi/\lambda$ versus more complex statements (ie hard than Maxwell's equations).
This is where knowing the physical meaning behind each symbol (i.e., $f$ is defined as the frequency with units Hertz) becomes necessary.

20121201

Plan: I need to implement (any) set of derivations in the multiple formats available (xml, graphml, tex) to get a feel for what is accomplishable.

For example, I currently don't have a good solution for dealing with symbol overlap. 

I don't have an xml-->tex converter. Given the xml database, produce a human-readable latex document compiled to PDF

I don't have the mathematica checker written. Given the xml database, produce pairs of statements related by an operation which can be checked. 
For this I also need a latex to mathematica checker for each statement.
Each operater needs to be translated to an equivalent mathematica script.

20121124

I thought Maxwell's equations to the wave equation was an example of "end-to-end" where "end point"=experimentally verifiable statement. 
However, the wave equation is just a mathematical statement (not directly verifiable?). 

"physical experiment" --> Math description --> do some mathematical manipulation --> get a quantitative answer related to the physical system, a prediction which can be measured.

Although I'm not going to be doing what I was expecting, I think the idea still is valid. 
That is, instead of mathematical steps between experimentally verified equations, we will be using the latex-based graph nodes and operators to describe steps related to specific experiments. 
Then the question is which experiments? 
Answer: canonical undergrad-level historical experiments, then to be adopted by current researchers.
There will be commonly-used statements (i.e., Maxwell's equations) and mathematical derivations (quadratic equation).

In addition, I'll need to specify variable type, physical description, and units.

20121111

I made a lot of progress today. Now I have

(text database) --> LatexToPNG+Graphviz
(text database) --> LatexToSVG+Graphviz

(XML database)
                    SVG+yEd
                    
To do:
(XML database) <--> SVG+yEd
That is, I need a converter from XML database to SVG+yEd, and something to record the output from yEd back to database format.

20121111

I have been thinking about the interface and its design for the past few months, but today I realized I can build up the data base without a functional interface.
There are other graph producing programs which I can use, assuming I write a translator from the database to whatever format they use.

Currently I use
(text database) --> LatexToPNG+Graphviz

I should probably also consider using XML for the databases rather than plain text. 

http://www.quackit.com/xml/tutorial/
https://en.wikipedia.org/wiki/XML_database

20121110

It might be the case that there are an insufficient number of distinct symbols for all necessary equations.

As a solution, replace a given symbol (i.e., \rho) with a numeric index. This is distinct from the statement index.

We would replace $\omega = 2 \pi \omega$ 
with $ s59285928 = 2 s95829579 s95829852 $
where
s59285928=\omega
s95829579=\pi
s95829852=\omega

I've placed "s" in front of the symbol index to distinguish it from statement index.
I've left the integer 2 as it isn't necessary to replace.

20121104

The physics graph is needed. Look at a page from a text book. There is lack of connectivity of graphs. Readers are unable to measure relative importance of equations.
Readers must either trust the author or waste time re-deriving "known" equations.

20121104

Any software solution must use latex to render equations. Latex is the only good free method.

20121104

The database and interface are orthogonal in development but are codependent. One cannot be used without the other -- storage an manipulation.

I prefer plain text databases and an interface using open standards.

20121104

My objective in developing the physics graph is not applicable to math. As an example,
$\frac{2x+9}{3x+4}=2$
In math there are an arbitrary number of statements since none are physically testable.

However, factorization and solving polynomials may be common.

20121104

equation properties:
-add X to both sides
-multiply both sides by X
-raise both sides to power X

20121104

I should be explicit about what I'm not referring to by "graph"
-pairs of x,f(x)
-functional graphs

20121104

What is the difference between my equation index and the Godel number?

20121104

"Equation" is a subset of mathematical statement.

20121104

The difference between the wikipedia graph and the physics graph is that link density is limited on wikipedia. All pages have less than 100 links, whereas there is no such limit for nodes of the physics graph. 

20121104

Whether the physics graph is semantic web should be an early decision in the design process. I haven't decided yet.

20121104

Instead of HTML5 canvas or SVG, try processing

-can read/write to file
http://www.learningprocessing.com/tutorials/external-data-into-processing-1/

-can work with images
http://www.processing.org/reference/image_.html
http://processing.org/learning/basics/loaddisplayimage.html

-canvas can draw images
http://www.ubelly.com/2011/01/creating-a-picture-gallery-with-html5-canvas/

I need to come up with a minimum set of requirements
-zooming interface (Google Maps, Prezi)
   --> SVG? Canvas? [static png from graphviz is not sufficient]
-intuitive (no manual needed)
-rendering beautiful equation (ie Latex)
   --> http://mathandmore.fridoverweij.com/math_computers.html
       MathJax Javascript library
   Neither HTML5 canvas nor HTML5 SVG support Latex equations
-avoid specialized tools [perl, python, processing, latex to html]
   --> Web browser based is platform independent.


20121104

I cannot use SVG pictures as nodes (statements, operators) because
http://www.w3schools.com/html/html5_svg.asp
"In SVG, each drawn shape is remembered as an object. If attributes of an SVG object are changed, the browser can automatically re-render the shape.
Canvas is rendered pixel by pixel. In canvas, once the graphic is drawn, it is forgotten by the browser. If its position should be changed, the entire scene needs to be redrawn, including any objects that might have been covered by the graphic."

Nice summary of SVG HTML5 
http://www.ibm.com/developerworks/web/library/wa-scalable/index.html

canvas can be saved to PNG.

http://blogs.msdn.com/b/eternalcoding/archive/2011/09/06/write-a-small-game-using-html5-and-javascript-brikbrok.aspx

http://jack-kelly.com/html5_canvas_versus_svg_for_interactive_charts_and_graphical

http://raphaeljs.com/


#trapezoid {
    border-bottom: 100px solid red;
    border-left: 50px solid transparent;
    border-right: 50px solid transparent;
    height: 0;
    width: 100px;
}
http://css-tricks.com/examples/ShapesOfCSS/

20121027

1) have a good idea
2) design an intuitive interface

The decision between php versus perl versus python versus HTML5 is a developer detail irrelevant to users.

Users think about the content in terms of the interface. See also Latex versus Word, a printed map versus google maps.


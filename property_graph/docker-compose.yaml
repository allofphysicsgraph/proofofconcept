# https://docs.docker.com/compose/compose-file/

# https://docs.docker.com/compose/compose-file/#environment
version: "3.6"

services:
  webserver:
    build:
      context: ./webserver
      dockerfile: Dockerfile
    restart: unless-stopped
# using "ports" makes flask/gunicorn accessible without going through nginx
    environment:
     - SECRET_KEY=${SECRET_KEY}
    expose:
      - 5000
    depends_on:
      - "neo4j_docker"
    networks:
      neo4j-internal:
        aliases:
          - neo4j-network
    ports:
     - "5000:5000"
    volumes:
     - ${PWD}/:/scratch

  # see https://neo4j.com/docs/operations-manual/current/docker/introduction/
  # https://neo4j.com/docs/operations-manual/current/docker/clustering/
  # https://stackoverflow.com/questions/48465046/run-neo4j-with-docker-compose-neo4j-not-accessible-from-localhost7474
  # https://medium.com/@faaizhussain/neo4j-4-0-docker-compose-9bead6634c8
  neo4j_docker:
    image: neo4j:4.4.4-community
    restart: unless-stopped

    hostname: neo4j_host

    #network_mode: "bridge"
    # https://stackoverflow.com/a/48637671/1164295
    networks:
      neo4j-internal:
        aliases:
          - neo4j-network


    # The ports that will be accessible from outside the container
    # 7474=HTTP, 7473=HTTPS, 7687=Bolt; as per https://neo4j.com/developer/docker-run-neo4j/
    ports:
      - "7474:7474"
      - "7473:7473"
      - "7687:7687"
    # as per https://neo4j.com/docs/operations-manual/current/docker/clustering/
    volumes:
      - './data:/var/lib/neo4j/data'
      - './logs:/var/lib/neo4j/logs'
      - './conf:/var/lib/neo4j/conf'
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#environment
    # see https://neo4j.com/docs/operations-manual/current/docker/ref-settings/
    environment:
      - NEO4J_dbms_allow__upgrade=true
      - NEO4J_AUTH=none

networks:
  neo4j-internal:
    driver: bridge

# EOF

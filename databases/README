== inference_rules_database.csv ==

               string,int,int,int,int,string,string
<inference rule name>,<number of arguments>,<number of feeds>,<number of input expressions>,<number of output expressions>,<comments>,<latex expansion>
       multLHSbyUnity,2,1,1,1,"none","Multiply LHS of Eq.~\ref{eq:#2} by 1, which in this case is $#1$"


note: "number of arguments" refers to the number of latex inputs (#1, #2, ...)

== feed_database.csv ==

    int,str
<index>,<latex>
4307451,(b/(2a))^2

== expressions.csv ==

       int,str
   <index>,<latex>
9294858532,\hat{A}^+=\hat{A}

== connections_database.csv ==

                         string,int,         string,int,int or str,                                       string,int,int or str
              <derivation name>,<step index>,<input type>,<input temporary index>,<input permenant index>,<output type>,<output temporary index>,<output permenant index>
"quadratic equation derivation",3,           "expression",8882098,9285928292,                             "infrule",8492932,dividebothsidesby

note: "type" is either infrule,expression, or feed

== symbols_database.csv ==

            int,str,str,float,str,str,str
    <unique id>,<symbol>,<type>,   <value>,<units>,<description>,<cas_sympy>
030949482852494,m,      "variable","none", "kg",   "mass",       m = sympy.Symbol('m')

note: "type" is either "variable" or "constant" or "operator" or "infinitesimal"

note: units can be either generic (length, angle) or specific (meters, radians)